#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.9151
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace mfmFFSDB
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="NASWeighment")]
	public partial class dbFFS : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertCnfMenues(CnfMenues instance);
    partial void UpdateCnfMenues(CnfMenues instance);
    partial void DeleteCnfMenues(CnfMenues instance);
    partial void InsertCnfRoles(CnfRoles instance);
    partial void UpdateCnfRoles(CnfRoles instance);
    partial void DeleteCnfRoles(CnfRoles instance);
    partial void InsertCnfRolesDetail(CnfRolesDetail instance);
    partial void UpdateCnfRolesDetail(CnfRolesDetail instance);
    partial void DeleteCnfRolesDetail(CnfRolesDetail instance);
    partial void InsertMstLov(MstLov instance);
    partial void UpdateMstLov(MstLov instance);
    partial void DeleteMstLov(MstLov instance);
    partial void InsertMstPacker(MstPacker instance);
    partial void UpdateMstPacker(MstPacker instance);
    partial void DeleteMstPacker(MstPacker instance);
    partial void InsertMstReports(MstReports instance);
    partial void UpdateMstReports(MstReports instance);
    partial void DeleteMstReports(MstReports instance);
    partial void InsertMstSeal(MstSeal instance);
    partial void UpdateMstSeal(MstSeal instance);
    partial void DeleteMstSeal(MstSeal instance);
    partial void InsertMstShift(MstShift instance);
    partial void UpdateMstShift(MstShift instance);
    partial void DeleteMstShift(MstShift instance);
    partial void InsertMstTolerance(MstTolerance instance);
    partial void UpdateMstTolerance(MstTolerance instance);
    partial void DeleteMstTolerance(MstTolerance instance);
    partial void InsertMstTransportType(MstTransportType instance);
    partial void UpdateMstTransportType(MstTransportType instance);
    partial void DeleteMstTransportType(MstTransportType instance);
    partial void InsertMstUsers(MstUsers instance);
    partial void UpdateMstUsers(MstUsers instance);
    partial void DeleteMstUsers(MstUsers instance);
    partial void InsertMstWeighBridge(MstWeighBridge instance);
    partial void UpdateMstWeighBridge(MstWeighBridge instance);
    partial void DeleteMstWeighBridge(MstWeighBridge instance);
    partial void InsertMstYardType(MstYardType instance);
    partial void UpdateMstYardType(MstYardType instance);
    partial void DeleteMstYardType(MstYardType instance);
    partial void InsertTrnsDispatch(TrnsDispatch instance);
    partial void UpdateTrnsDispatch(TrnsDispatch instance);
    partial void DeleteTrnsDispatch(TrnsDispatch instance);
    partial void InsertTrnsDispatchMulti(TrnsDispatchMulti instance);
    partial void UpdateTrnsDispatchMulti(TrnsDispatchMulti instance);
    partial void DeleteTrnsDispatchMulti(TrnsDispatchMulti instance);
    partial void InsertTrnsDispatchReturn(TrnsDispatchReturn instance);
    partial void UpdateTrnsDispatchReturn(TrnsDispatchReturn instance);
    partial void DeleteTrnsDispatchReturn(TrnsDispatchReturn instance);
    partial void InsertTrnsRawMaterial(TrnsRawMaterial instance);
    partial void UpdateTrnsRawMaterial(TrnsRawMaterial instance);
    partial void DeleteTrnsRawMaterial(TrnsRawMaterial instance);
    partial void InsertTrnsRawMaterialReturn(TrnsRawMaterialReturn instance);
    partial void UpdateTrnsRawMaterialReturn(TrnsRawMaterialReturn instance);
    partial void DeleteTrnsRawMaterialReturn(TrnsRawMaterialReturn instance);
    #endregion
		
		public dbFFS(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFFS(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFFS(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbFFS(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<CnfMenues> CnfMenues
		{
			get
			{
				return this.GetTable<CnfMenues>();
			}
		}
		
		public System.Data.Linq.Table<CnfRoles> CnfRoles
		{
			get
			{
				return this.GetTable<CnfRoles>();
			}
		}
		
		public System.Data.Linq.Table<CnfRolesDetail> CnfRolesDetail
		{
			get
			{
				return this.GetTable<CnfRolesDetail>();
			}
		}
		
		public System.Data.Linq.Table<MstLov> MstLov
		{
			get
			{
				return this.GetTable<MstLov>();
			}
		}
		
		public System.Data.Linq.Table<MstPacker> MstPacker
		{
			get
			{
				return this.GetTable<MstPacker>();
			}
		}
		
		public System.Data.Linq.Table<MstReports> MstReports
		{
			get
			{
				return this.GetTable<MstReports>();
			}
		}
		
		public System.Data.Linq.Table<MstSeal> MstSeal
		{
			get
			{
				return this.GetTable<MstSeal>();
			}
		}
		
		public System.Data.Linq.Table<MstShift> MstShift
		{
			get
			{
				return this.GetTable<MstShift>();
			}
		}
		
		public System.Data.Linq.Table<MstTolerance> MstTolerance
		{
			get
			{
				return this.GetTable<MstTolerance>();
			}
		}
		
		public System.Data.Linq.Table<MstTransportType> MstTransportType
		{
			get
			{
				return this.GetTable<MstTransportType>();
			}
		}
		
		public System.Data.Linq.Table<MstUsers> MstUsers
		{
			get
			{
				return this.GetTable<MstUsers>();
			}
		}
		
		public System.Data.Linq.Table<MstWeighBridge> MstWeighBridge
		{
			get
			{
				return this.GetTable<MstWeighBridge>();
			}
		}
		
		public System.Data.Linq.Table<MstYardType> MstYardType
		{
			get
			{
				return this.GetTable<MstYardType>();
			}
		}
		
		public System.Data.Linq.Table<TrnsDispatch> TrnsDispatch
		{
			get
			{
				return this.GetTable<TrnsDispatch>();
			}
		}
		
		public System.Data.Linq.Table<TrnsDispatchMulti> TrnsDispatchMulti
		{
			get
			{
				return this.GetTable<TrnsDispatchMulti>();
			}
		}
		
		public System.Data.Linq.Table<TrnsDispatchReturn> TrnsDispatchReturn
		{
			get
			{
				return this.GetTable<TrnsDispatchReturn>();
			}
		}
		
		public System.Data.Linq.Table<TrnsRawMaterial> TrnsRawMaterial
		{
			get
			{
				return this.GetTable<TrnsRawMaterial>();
			}
		}
		
		public System.Data.Linq.Table<TrnsRawMaterialReturn> TrnsRawMaterialReturn
		{
			get
			{
				return this.GetTable<TrnsRawMaterialReturn>();
			}
		}
		
		[Function(Name="dbo.GetSumOpenValueSO")]
		public ISingleResult<GetSumOpenValueSOResult> GetSumOpenValueSO([Parameter(Name="SBRNum", DbType="NVarChar(50)")] string sBRNum, [Parameter(Name="CardCode", DbType="NVarChar(50)")] string cardCode, [Parameter(Name="ItemCode", DbType="NVarChar(50)")] string itemCode, [Parameter(Name="ReturnValue", DbType="Decimal(18,3)")] ref System.Nullable<decimal> returnValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sBRNum, cardCode, itemCode, returnValue);
			returnValue = ((System.Nullable<decimal>)(result.GetParameterValue(3)));
			return ((ISingleResult<GetSumOpenValueSOResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.GetSumOpenValueSOValidation")]
		public ISingleResult<GetSumOpenValueSOValidationResult> GetSumOpenValueSOValidation([Parameter(Name="SBRNum", DbType="NVarChar(50)")] string sBRNum, [Parameter(Name="CardCode", DbType="NVarChar(50)")] string cardCode, [Parameter(Name="ItemCode", DbType="NVarChar(50)")] string itemCode, [Parameter(Name="DocNum", DbType="Int")] System.Nullable<int> docNum, [Parameter(Name="ReturnValue", DbType="Decimal(18,3)")] ref System.Nullable<decimal> returnValue)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), sBRNum, cardCode, itemCode, docNum, returnValue);
			returnValue = ((System.Nullable<decimal>)(result.GetParameterValue(4)));
			return ((ISingleResult<GetSumOpenValueSOValidationResult>)(result.ReturnValue));
		}
		
		[Function(Name="dbo.RemoveAllDetailsDispatch")]
		[return: Parameter(DbType="Int")]
		public int RemoveAllDetailsDispatch([Parameter(Name="DocNum", DbType="Int")] System.Nullable<int> docNum)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), docNum);
			return ((int)(result.ReturnValue));
		}
	}
	
	[Table(Name="dbo.cnfMenues")]
	public partial class CnfMenues : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _MenuName;
		
		private string _MenuLink;
		
		private System.Nullable<int> _MenuParent;
		
		private System.Nullable<int> _SortNum;
		
		private System.Nullable<int> _ImageID;
		
		private System.Nullable<int> _ReportsID;
		
		private System.Nullable<System.DateTime> _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _MenuLinkParameter;
		
		private string _MnuParentStr;
		
		private EntitySet<CnfRolesDetail> _CnfRolesDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnMenuLinkChanging(string value);
    partial void OnMenuLinkChanged();
    partial void OnMenuParentChanging(System.Nullable<int> value);
    partial void OnMenuParentChanged();
    partial void OnSortNumChanging(System.Nullable<int> value);
    partial void OnSortNumChanged();
    partial void OnImageIDChanging(System.Nullable<int> value);
    partial void OnImageIDChanged();
    partial void OnReportsIDChanging(System.Nullable<int> value);
    partial void OnReportsIDChanged();
    partial void OnCreateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnMenuLinkParameterChanging(string value);
    partial void OnMenuLinkParameterChanged();
    partial void OnMnuParentStrChanging(string value);
    partial void OnMnuParentStrChanged();
    #endregion
		
		public CnfMenues()
		{
			this._CnfRolesDetail = new EntitySet<CnfRolesDetail>(new Action<CnfRolesDetail>(this.attach_CnfRolesDetail), new Action<CnfRolesDetail>(this.detach_CnfRolesDetail));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_MenuName", DbType="NVarChar(100)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[Column(Storage="_MenuLink", DbType="NVarChar(100)")]
		public string MenuLink
		{
			get
			{
				return this._MenuLink;
			}
			set
			{
				if ((this._MenuLink != value))
				{
					this.OnMenuLinkChanging(value);
					this.SendPropertyChanging();
					this._MenuLink = value;
					this.SendPropertyChanged("MenuLink");
					this.OnMenuLinkChanged();
				}
			}
		}
		
		[Column(Storage="_MenuParent", DbType="Int")]
		public System.Nullable<int> MenuParent
		{
			get
			{
				return this._MenuParent;
			}
			set
			{
				if ((this._MenuParent != value))
				{
					this.OnMenuParentChanging(value);
					this.SendPropertyChanging();
					this._MenuParent = value;
					this.SendPropertyChanged("MenuParent");
					this.OnMenuParentChanged();
				}
			}
		}
		
		[Column(Storage="_SortNum", DbType="Int")]
		public System.Nullable<int> SortNum
		{
			get
			{
				return this._SortNum;
			}
			set
			{
				if ((this._SortNum != value))
				{
					this.OnSortNumChanging(value);
					this.SendPropertyChanging();
					this._SortNum = value;
					this.SendPropertyChanged("SortNum");
					this.OnSortNumChanged();
				}
			}
		}
		
		[Column(Storage="_ImageID", DbType="Int")]
		public System.Nullable<int> ImageID
		{
			get
			{
				return this._ImageID;
			}
			set
			{
				if ((this._ImageID != value))
				{
					this.OnImageIDChanging(value);
					this.SendPropertyChanging();
					this._ImageID = value;
					this.SendPropertyChanged("ImageID");
					this.OnImageIDChanged();
				}
			}
		}
		
		[Column(Storage="_ReportsID", DbType="Int")]
		public System.Nullable<int> ReportsID
		{
			get
			{
				return this._ReportsID;
			}
			set
			{
				if ((this._ReportsID != value))
				{
					this.OnReportsIDChanging(value);
					this.SendPropertyChanging();
					this._ReportsID = value;
					this.SendPropertyChanged("ReportsID");
					this.OnReportsIDChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_MenuLinkParameter", DbType="NVarChar(50)")]
		public string MenuLinkParameter
		{
			get
			{
				return this._MenuLinkParameter;
			}
			set
			{
				if ((this._MenuLinkParameter != value))
				{
					this.OnMenuLinkParameterChanging(value);
					this.SendPropertyChanging();
					this._MenuLinkParameter = value;
					this.SendPropertyChanged("MenuLinkParameter");
					this.OnMenuLinkParameterChanged();
				}
			}
		}
		
		[Column(Storage="_MnuParentStr", DbType="NVarChar(300)")]
		public string MnuParentStr
		{
			get
			{
				return this._MnuParentStr;
			}
			set
			{
				if ((this._MnuParentStr != value))
				{
					this.OnMnuParentStrChanging(value);
					this.SendPropertyChanging();
					this._MnuParentStr = value;
					this.SendPropertyChanged("MnuParentStr");
					this.OnMnuParentStrChanged();
				}
			}
		}
		
		[Association(Name="FK_cnfRolesDetail_cnfMenues", Storage="_CnfRolesDetail", ThisKey="ID", OtherKey="MenuID", DeleteRule="NO ACTION")]
		public EntitySet<CnfRolesDetail> CnfRolesDetail
		{
			get
			{
				return this._CnfRolesDetail;
			}
			set
			{
				this._CnfRolesDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CnfRolesDetail(CnfRolesDetail entity)
		{
			this.SendPropertyChanging();
			entity.CnfMenues = this;
		}
		
		private void detach_CnfRolesDetail(CnfRolesDetail entity)
		{
			this.SendPropertyChanging();
			entity.CnfMenues = null;
		}
	}
	
	[Table(Name="dbo.cnfRoles")]
	public partial class CnfRoles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _RoleName;
		
		private System.Nullable<System.DateTime> _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _CreatedBy;
		
		private string _UpdatedBy;
		
		private EntitySet<CnfRolesDetail> _CnfRolesDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRoleNameChanging(string value);
    partial void OnRoleNameChanged();
    partial void OnCreateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public CnfRoles()
		{
			this._CnfRolesDetail = new EntitySet<CnfRolesDetail>(new Action<CnfRolesDetail>(this.attach_CnfRolesDetail), new Action<CnfRolesDetail>(this.detach_CnfRolesDetail));
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleName", DbType="NVarChar(50)")]
		public string RoleName
		{
			get
			{
				return this._RoleName;
			}
			set
			{
				if ((this._RoleName != value))
				{
					this.OnRoleNameChanging(value);
					this.SendPropertyChanging();
					this._RoleName = value;
					this.SendPropertyChanged("RoleName");
					this.OnRoleNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Association(Name="FK_cnfRolesDetail_cnfRoles", Storage="_CnfRolesDetail", ThisKey="ID", OtherKey="RoleID", DeleteRule="NO ACTION")]
		public EntitySet<CnfRolesDetail> CnfRolesDetail
		{
			get
			{
				return this._CnfRolesDetail;
			}
			set
			{
				this._CnfRolesDetail.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CnfRolesDetail(CnfRolesDetail entity)
		{
			this.SendPropertyChanging();
			entity.CnfRoles = this;
		}
		
		private void detach_CnfRolesDetail(CnfRolesDetail entity)
		{
			this.SendPropertyChanging();
			entity.CnfRoles = null;
		}
	}
	
	[Table(Name="dbo.cnfRolesDetail")]
	public partial class CnfRolesDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private System.Nullable<long> _RoleID;
		
		private System.Nullable<long> _MenuID;
		
		private string _MenuName;
		
		private System.Nullable<byte> _GivenRight;
		
		private System.Nullable<System.DateTime> _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _CreatedBy;
		
		private string _UpdatedBy;
		
		private EntityRef<CnfMenues> _CnfMenues;
		
		private EntityRef<CnfRoles> _CnfRoles;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRoleIDChanging(System.Nullable<long> value);
    partial void OnRoleIDChanged();
    partial void OnMenuIDChanging(System.Nullable<long> value);
    partial void OnMenuIDChanged();
    partial void OnMenuNameChanging(string value);
    partial void OnMenuNameChanged();
    partial void OnGivenRightChanging(System.Nullable<byte> value);
    partial void OnGivenRightChanged();
    partial void OnCreateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public CnfRolesDetail()
		{
			this._CnfMenues = default(EntityRef<CnfMenues>);
			this._CnfRoles = default(EntityRef<CnfRoles>);
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="BigInt")]
		public System.Nullable<long> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					if (this._CnfRoles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_MenuID", DbType="BigInt")]
		public System.Nullable<long> MenuID
		{
			get
			{
				return this._MenuID;
			}
			set
			{
				if ((this._MenuID != value))
				{
					if (this._CnfMenues.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMenuIDChanging(value);
					this.SendPropertyChanging();
					this._MenuID = value;
					this.SendPropertyChanged("MenuID");
					this.OnMenuIDChanged();
				}
			}
		}
		
		[Column(Storage="_MenuName", DbType="NVarChar(100)")]
		public string MenuName
		{
			get
			{
				return this._MenuName;
			}
			set
			{
				if ((this._MenuName != value))
				{
					this.OnMenuNameChanging(value);
					this.SendPropertyChanging();
					this._MenuName = value;
					this.SendPropertyChanged("MenuName");
					this.OnMenuNameChanged();
				}
			}
		}
		
		[Column(Storage="_GivenRight", DbType="TinyInt")]
		public System.Nullable<byte> GivenRight
		{
			get
			{
				return this._GivenRight;
			}
			set
			{
				if ((this._GivenRight != value))
				{
					this.OnGivenRightChanging(value);
					this.SendPropertyChanging();
					this._GivenRight = value;
					this.SendPropertyChanged("GivenRight");
					this.OnGivenRightChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		[Association(Name="FK_cnfRolesDetail_cnfMenues", Storage="_CnfMenues", ThisKey="MenuID", OtherKey="ID", IsForeignKey=true)]
		public CnfMenues CnfMenues
		{
			get
			{
				return this._CnfMenues.Entity;
			}
			set
			{
				CnfMenues previousValue = this._CnfMenues.Entity;
				if (((previousValue != value) 
							|| (this._CnfMenues.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CnfMenues.Entity = null;
						previousValue.CnfRolesDetail.Remove(this);
					}
					this._CnfMenues.Entity = value;
					if ((value != null))
					{
						value.CnfRolesDetail.Add(this);
						this._MenuID = value.ID;
					}
					else
					{
						this._MenuID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CnfMenues");
				}
			}
		}
		
		[Association(Name="FK_cnfRolesDetail_cnfRoles", Storage="_CnfRoles", ThisKey="RoleID", OtherKey="ID", IsForeignKey=true)]
		public CnfRoles CnfRoles
		{
			get
			{
				return this._CnfRoles.Entity;
			}
			set
			{
				CnfRoles previousValue = this._CnfRoles.Entity;
				if (((previousValue != value) 
							|| (this._CnfRoles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CnfRoles.Entity = null;
						previousValue.CnfRolesDetail.Remove(this);
					}
					this._CnfRoles.Entity = value;
					if ((value != null))
					{
						value.CnfRolesDetail.Add(this);
						this._RoleID = value.ID;
					}
					else
					{
						this._RoleID = default(Nullable<long>);
					}
					this.SendPropertyChanged("CnfRoles");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstLov")]
	public partial class MstLov : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _Code;
		
		private string _Value;
		
		private string _Type;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnValueChanging(string value);
    partial void OnValueChanged();
    partial void OnTypeChanging(string value);
    partial void OnTypeChanged();
    #endregion
		
		public MstLov()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(50)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Value", DbType="NVarChar(50)")]
		public string Value
		{
			get
			{
				return this._Value;
			}
			set
			{
				if ((this._Value != value))
				{
					this.OnValueChanging(value);
					this.SendPropertyChanging();
					this._Value = value;
					this.SendPropertyChanged("Value");
					this.OnValueChanged();
				}
			}
		}
		
		[Column(Storage="_Type", DbType="NVarChar(50)")]
		public string Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstPacker")]
	public partial class MstPacker : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _CreateBy;
		
		private string _UpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    #endregion
		
		public MstPacker()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="NVarChar(200)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(100)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="NVarChar(100)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstReports")]
	public partial class MstReports : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _RptCode;
		
		private string _RptName;
		
		private System.Data.Linq.Binary _RptFile;
		
		private string _ReportIn;
		
		private string _Critaria;
		
		private System.Nullable<bool> _FlgLayout;
		
		private System.Nullable<bool> _FlgReport;
		
		private System.Nullable<bool> _FlgDefault;
		
		private System.Nullable<bool> _FlgActive;
		
		private System.Nullable<System.DateTime> _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _CreatedBy;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnRptCodeChanging(string value);
    partial void OnRptCodeChanged();
    partial void OnRptNameChanging(string value);
    partial void OnRptNameChanged();
    partial void OnRptFileChanging(System.Data.Linq.Binary value);
    partial void OnRptFileChanged();
    partial void OnReportInChanging(string value);
    partial void OnReportInChanged();
    partial void OnCritariaChanging(string value);
    partial void OnCritariaChanged();
    partial void OnFlgLayoutChanging(System.Nullable<bool> value);
    partial void OnFlgLayoutChanged();
    partial void OnFlgReportChanging(System.Nullable<bool> value);
    partial void OnFlgReportChanged();
    partial void OnFlgDefaultChanging(System.Nullable<bool> value);
    partial void OnFlgDefaultChanged();
    partial void OnFlgActiveChanging(System.Nullable<bool> value);
    partial void OnFlgActiveChanged();
    partial void OnCreateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public MstReports()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Name="rptCode", Storage="_RptCode", DbType="NVarChar(50)")]
		public string RptCode
		{
			get
			{
				return this._RptCode;
			}
			set
			{
				if ((this._RptCode != value))
				{
					this.OnRptCodeChanging(value);
					this.SendPropertyChanging();
					this._RptCode = value;
					this.SendPropertyChanged("RptCode");
					this.OnRptCodeChanged();
				}
			}
		}
		
		[Column(Name="rptName", Storage="_RptName", DbType="NVarChar(200)")]
		public string RptName
		{
			get
			{
				return this._RptName;
			}
			set
			{
				if ((this._RptName != value))
				{
					this.OnRptNameChanging(value);
					this.SendPropertyChanging();
					this._RptName = value;
					this.SendPropertyChanged("RptName");
					this.OnRptNameChanged();
				}
			}
		}
		
		[Column(Name="rptFile", Storage="_RptFile", DbType="VarBinary(MAX)", CanBeNull=true, UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary RptFile
		{
			get
			{
				return this._RptFile;
			}
			set
			{
				if ((this._RptFile != value))
				{
					this.OnRptFileChanging(value);
					this.SendPropertyChanging();
					this._RptFile = value;
					this.SendPropertyChanged("RptFile");
					this.OnRptFileChanged();
				}
			}
		}
		
		[Column(Name="reportIn", Storage="_ReportIn", DbType="NVarChar(200)")]
		public string ReportIn
		{
			get
			{
				return this._ReportIn;
			}
			set
			{
				if ((this._ReportIn != value))
				{
					this.OnReportInChanging(value);
					this.SendPropertyChanging();
					this._ReportIn = value;
					this.SendPropertyChanged("ReportIn");
					this.OnReportInChanged();
				}
			}
		}
		
		[Column(Storage="_Critaria", DbType="NVarChar(1000)")]
		public string Critaria
		{
			get
			{
				return this._Critaria;
			}
			set
			{
				if ((this._Critaria != value))
				{
					this.OnCritariaChanging(value);
					this.SendPropertyChanging();
					this._Critaria = value;
					this.SendPropertyChanged("Critaria");
					this.OnCritariaChanged();
				}
			}
		}
		
		[Column(Name="flgLayout", Storage="_FlgLayout", DbType="Bit")]
		public System.Nullable<bool> FlgLayout
		{
			get
			{
				return this._FlgLayout;
			}
			set
			{
				if ((this._FlgLayout != value))
				{
					this.OnFlgLayoutChanging(value);
					this.SendPropertyChanging();
					this._FlgLayout = value;
					this.SendPropertyChanged("FlgLayout");
					this.OnFlgLayoutChanged();
				}
			}
		}
		
		[Column(Name="flgReport", Storage="_FlgReport", DbType="Bit")]
		public System.Nullable<bool> FlgReport
		{
			get
			{
				return this._FlgReport;
			}
			set
			{
				if ((this._FlgReport != value))
				{
					this.OnFlgReportChanging(value);
					this.SendPropertyChanging();
					this._FlgReport = value;
					this.SendPropertyChanged("FlgReport");
					this.OnFlgReportChanged();
				}
			}
		}
		
		[Column(Name="flgDefault", Storage="_FlgDefault", DbType="Bit")]
		public System.Nullable<bool> FlgDefault
		{
			get
			{
				return this._FlgDefault;
			}
			set
			{
				if ((this._FlgDefault != value))
				{
					this.OnFlgDefaultChanging(value);
					this.SendPropertyChanging();
					this._FlgDefault = value;
					this.SendPropertyChanged("FlgDefault");
					this.OnFlgDefaultChanged();
				}
			}
		}
		
		[Column(Name="flgActive", Storage="_FlgActive", DbType="Bit")]
		public System.Nullable<bool> FlgActive
		{
			get
			{
				return this._FlgActive;
			}
			set
			{
				if ((this._FlgActive != value))
				{
					this.OnFlgActiveChanging(value);
					this.SendPropertyChanging();
					this._FlgActive = value;
					this.SendPropertyChanged("FlgActive");
					this.OnFlgActiveChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstSeal")]
	public partial class MstSeal : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DocNum;
		
		private string _SealNum;
		
		private string _ItemCode;
		
		private string _FormName;
		
		private System.Nullable<System.DateTime> _CreateDT;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDT;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocNumChanging(System.Nullable<int> value);
    partial void OnDocNumChanged();
    partial void OnSealNumChanging(string value);
    partial void OnSealNumChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnFormNameChanging(string value);
    partial void OnFormNameChanged();
    partial void OnCreateDTChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDTChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDTChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDTChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public MstSeal()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocNum", DbType="Int")]
		public System.Nullable<int> DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[Column(Storage="_SealNum", DbType="NVarChar(50)")]
		public string SealNum
		{
			get
			{
				return this._SealNum;
			}
			set
			{
				if ((this._SealNum != value))
				{
					this.OnSealNumChanging(value);
					this.SendPropertyChanging();
					this._SealNum = value;
					this.SendPropertyChanged("SealNum");
					this.OnSealNumChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_FormName", DbType="NVarChar(100)")]
		public string FormName
		{
			get
			{
				return this._FormName;
			}
			set
			{
				if ((this._FormName != value))
				{
					this.OnFormNameChanging(value);
					this.SendPropertyChanging();
					this._FormName = value;
					this.SendPropertyChanged("FormName");
					this.OnFormNameChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDT", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDT
		{
			get
			{
				return this._CreateDT;
			}
			set
			{
				if ((this._CreateDT != value))
				{
					this.OnCreateDTChanging(value);
					this.SendPropertyChanging();
					this._CreateDT = value;
					this.SendPropertyChanged("CreateDT");
					this.OnCreateDTChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="NVarChar(100)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDT", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDT
		{
			get
			{
				return this._UpdateDT;
			}
			set
			{
				if ((this._UpdateDT != value))
				{
					this.OnUpdateDTChanging(value);
					this.SendPropertyChanging();
					this._UpdateDT = value;
					this.SendPropertyChanged("UpdateDT");
					this.OnUpdateDTChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(100)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstShift")]
	public partial class MstShift : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _DurationFrom;
		
		private string _DurationTo;
		
		private string _Remarks;
		
		private System.DateTime _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _CreateBy;
		
		private string _UpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnDurationFromChanging(string value);
    partial void OnDurationFromChanged();
    partial void OnDurationToChanging(string value);
    partial void OnDurationToChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreateDtChanging(System.DateTime value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    #endregion
		
		public MstShift()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_DurationFrom", DbType="NVarChar(20)")]
		public string DurationFrom
		{
			get
			{
				return this._DurationFrom;
			}
			set
			{
				if ((this._DurationFrom != value))
				{
					this.OnDurationFromChanging(value);
					this.SendPropertyChanging();
					this._DurationFrom = value;
					this.SendPropertyChanged("DurationFrom");
					this.OnDurationFromChanged();
				}
			}
		}
		
		[Column(Storage="_DurationTo", DbType="NVarChar(20)")]
		public string DurationTo
		{
			get
			{
				return this._DurationTo;
			}
			set
			{
				if ((this._DurationTo != value))
				{
					this.OnDurationToChanging(value);
					this.SendPropertyChanging();
					this._DurationTo = value;
					this.SendPropertyChanged("DurationTo");
					this.OnDurationToChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="NVarChar(200)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime NOT NULL")]
		public System.DateTime CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(100)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="NVarChar(100)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstTolerance")]
	public partial class MstTolerance : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _TName;
		
		private System.Nullable<decimal> _TRate;
		
		private System.Nullable<System.DateTime> _CreateDT;
		
		private string _CreatedBy;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnTNameChanging(string value);
    partial void OnTNameChanged();
    partial void OnTRateChanging(System.Nullable<decimal> value);
    partial void OnTRateChanged();
    partial void OnCreateDTChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDTChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public MstTolerance()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_TName", DbType="NVarChar(100)")]
		public string TName
		{
			get
			{
				return this._TName;
			}
			set
			{
				if ((this._TName != value))
				{
					this.OnTNameChanging(value);
					this.SendPropertyChanging();
					this._TName = value;
					this.SendPropertyChanged("TName");
					this.OnTNameChanged();
				}
			}
		}
		
		[Column(Storage="_TRate", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> TRate
		{
			get
			{
				return this._TRate;
			}
			set
			{
				if ((this._TRate != value))
				{
					this.OnTRateChanging(value);
					this.SendPropertyChanging();
					this._TRate = value;
					this.SendPropertyChanged("TRate");
					this.OnTRateChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDT", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDT
		{
			get
			{
				return this._CreateDT;
			}
			set
			{
				if ((this._CreateDT != value))
				{
					this.OnCreateDTChanging(value);
					this.SendPropertyChanging();
					this._CreateDT = value;
					this.SendPropertyChanged("CreateDT");
					this.OnCreateDTChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstTransportType")]
	public partial class MstTransportType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Code;
		
		private string _Name;
		
		private System.Nullable<decimal> _WeightFrom;
		
		private System.Nullable<decimal> _WeightTo;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _CreateBy;
		
		private string _UpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnWeightFromChanging(System.Nullable<decimal> value);
    partial void OnWeightFromChanged();
    partial void OnWeightToChanging(System.Nullable<decimal> value);
    partial void OnWeightToChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    #endregion
		
		public MstTransportType()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_WeightFrom", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightFrom
		{
			get
			{
				return this._WeightFrom;
			}
			set
			{
				if ((this._WeightFrom != value))
				{
					this.OnWeightFromChanging(value);
					this.SendPropertyChanging();
					this._WeightFrom = value;
					this.SendPropertyChanged("WeightFrom");
					this.OnWeightFromChanged();
				}
			}
		}
		
		[Column(Storage="_WeightTo", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> WeightTo
		{
			get
			{
				return this._WeightTo;
			}
			set
			{
				if ((this._WeightTo != value))
				{
					this.OnWeightToChanging(value);
					this.SendPropertyChanging();
					this._WeightTo = value;
					this.SendPropertyChanged("WeightTo");
					this.OnWeightToChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="NVarChar(200)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(100)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="NVarChar(100)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstUsers")]
	public partial class MstUsers : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _UserCode;
		
		private string _UserName;
		
		private string _Password;
		
		private System.Nullable<bool> _FlgActive;
		
		private System.Nullable<bool> _FlgSuper;
		
		private System.Nullable<int> _BridgeID;
		
		private System.Nullable<long> _RoleID;
		
		private string _Email;
		
		private System.Nullable<bool> _FlgSpecial;
		
		private System.Nullable<System.DateTime> _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _CreatedBy;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnUserCodeChanging(string value);
    partial void OnUserCodeChanged();
    partial void OnUserNameChanging(string value);
    partial void OnUserNameChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnFlgActiveChanging(System.Nullable<bool> value);
    partial void OnFlgActiveChanged();
    partial void OnFlgSuperChanging(System.Nullable<bool> value);
    partial void OnFlgSuperChanged();
    partial void OnBridgeIDChanging(System.Nullable<int> value);
    partial void OnBridgeIDChanged();
    partial void OnRoleIDChanging(System.Nullable<long> value);
    partial void OnRoleIDChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnFlgSpecialChanging(System.Nullable<bool> value);
    partial void OnFlgSpecialChanged();
    partial void OnCreateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public MstUsers()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_UserCode", DbType="NVarChar(50)")]
		public string UserCode
		{
			get
			{
				return this._UserCode;
			}
			set
			{
				if ((this._UserCode != value))
				{
					this.OnUserCodeChanging(value);
					this.SendPropertyChanging();
					this._UserCode = value;
					this.SendPropertyChanged("UserCode");
					this.OnUserCodeChanged();
				}
			}
		}
		
		[Column(Storage="_UserName", DbType="NVarChar(100)")]
		public string UserName
		{
			get
			{
				return this._UserName;
			}
			set
			{
				if ((this._UserName != value))
				{
					this.OnUserNameChanging(value);
					this.SendPropertyChanging();
					this._UserName = value;
					this.SendPropertyChanged("UserName");
					this.OnUserNameChanged();
				}
			}
		}
		
		[Column(Storage="_Password", DbType="NVarChar(50)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[Column(Name="flgActive", Storage="_FlgActive", DbType="Bit")]
		public System.Nullable<bool> FlgActive
		{
			get
			{
				return this._FlgActive;
			}
			set
			{
				if ((this._FlgActive != value))
				{
					this.OnFlgActiveChanging(value);
					this.SendPropertyChanging();
					this._FlgActive = value;
					this.SendPropertyChanged("FlgActive");
					this.OnFlgActiveChanged();
				}
			}
		}
		
		[Column(Name="flgSuper", Storage="_FlgSuper", DbType="Bit")]
		public System.Nullable<bool> FlgSuper
		{
			get
			{
				return this._FlgSuper;
			}
			set
			{
				if ((this._FlgSuper != value))
				{
					this.OnFlgSuperChanging(value);
					this.SendPropertyChanging();
					this._FlgSuper = value;
					this.SendPropertyChanged("FlgSuper");
					this.OnFlgSuperChanged();
				}
			}
		}
		
		[Column(Storage="_BridgeID", DbType="Int")]
		public System.Nullable<int> BridgeID
		{
			get
			{
				return this._BridgeID;
			}
			set
			{
				if ((this._BridgeID != value))
				{
					this.OnBridgeIDChanging(value);
					this.SendPropertyChanging();
					this._BridgeID = value;
					this.SendPropertyChanged("BridgeID");
					this.OnBridgeIDChanged();
				}
			}
		}
		
		[Column(Storage="_RoleID", DbType="BigInt")]
		public System.Nullable<long> RoleID
		{
			get
			{
				return this._RoleID;
			}
			set
			{
				if ((this._RoleID != value))
				{
					this.OnRoleIDChanging(value);
					this.SendPropertyChanging();
					this._RoleID = value;
					this.SendPropertyChanged("RoleID");
					this.OnRoleIDChanged();
				}
			}
		}
		
		[Column(Storage="_Email", DbType="NVarChar(100)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[Column(Name="flgSpecial", Storage="_FlgSpecial", DbType="Bit")]
		public System.Nullable<bool> FlgSpecial
		{
			get
			{
				return this._FlgSpecial;
			}
			set
			{
				if ((this._FlgSpecial != value))
				{
					this.OnFlgSpecialChanging(value);
					this.SendPropertyChanging();
					this._FlgSpecial = value;
					this.SendPropertyChanged("FlgSpecial");
					this.OnFlgSpecialChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstWeighBridge")]
	public partial class MstWeighBridge : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _WBCode;
		
		private string _Series;
		
		private string _ComPort;
		
		private string _DataBits;
		
		private string _BaudRate;
		
		private string _StopBits;
		
		private string _Parity;
		
		private string _StartChar;
		
		private string _Lenght;
		
		private string _MachineName;
		
		private string _MachineIP;
		
		private System.Nullable<System.DateTime> _CreatedDt;
		
		private System.Nullable<System.DateTime> _UpdatedDt;
		
		private string _CreatedBy;
		
		private string _UpdatedBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnWBCodeChanging(string value);
    partial void OnWBCodeChanged();
    partial void OnSeriesChanging(string value);
    partial void OnSeriesChanged();
    partial void OnComPortChanging(string value);
    partial void OnComPortChanged();
    partial void OnDataBitsChanging(string value);
    partial void OnDataBitsChanged();
    partial void OnBaudRateChanging(string value);
    partial void OnBaudRateChanged();
    partial void OnStopBitsChanging(string value);
    partial void OnStopBitsChanged();
    partial void OnParityChanging(string value);
    partial void OnParityChanged();
    partial void OnStartCharChanging(string value);
    partial void OnStartCharChanged();
    partial void OnLenghtChanging(string value);
    partial void OnLenghtChanged();
    partial void OnMachineNameChanging(string value);
    partial void OnMachineNameChanged();
    partial void OnMachineIPChanging(string value);
    partial void OnMachineIPChanged();
    partial void OnCreatedDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreatedDtChanged();
    partial void OnUpdatedDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdatedDtChanged();
    partial void OnCreatedByChanging(string value);
    partial void OnCreatedByChanged();
    partial void OnUpdatedByChanging(string value);
    partial void OnUpdatedByChanged();
    #endregion
		
		public MstWeighBridge()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_WBCode", DbType="NVarChar(50)")]
		public string WBCode
		{
			get
			{
				return this._WBCode;
			}
			set
			{
				if ((this._WBCode != value))
				{
					this.OnWBCodeChanging(value);
					this.SendPropertyChanging();
					this._WBCode = value;
					this.SendPropertyChanged("WBCode");
					this.OnWBCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Series", DbType="NVarChar(50)")]
		public string Series
		{
			get
			{
				return this._Series;
			}
			set
			{
				if ((this._Series != value))
				{
					this.OnSeriesChanging(value);
					this.SendPropertyChanging();
					this._Series = value;
					this.SendPropertyChanged("Series");
					this.OnSeriesChanged();
				}
			}
		}
		
		[Column(Storage="_ComPort", DbType="NVarChar(50)")]
		public string ComPort
		{
			get
			{
				return this._ComPort;
			}
			set
			{
				if ((this._ComPort != value))
				{
					this.OnComPortChanging(value);
					this.SendPropertyChanging();
					this._ComPort = value;
					this.SendPropertyChanged("ComPort");
					this.OnComPortChanged();
				}
			}
		}
		
		[Column(Storage="_DataBits", DbType="NVarChar(50)")]
		public string DataBits
		{
			get
			{
				return this._DataBits;
			}
			set
			{
				if ((this._DataBits != value))
				{
					this.OnDataBitsChanging(value);
					this.SendPropertyChanging();
					this._DataBits = value;
					this.SendPropertyChanged("DataBits");
					this.OnDataBitsChanged();
				}
			}
		}
		
		[Column(Storage="_BaudRate", DbType="NVarChar(50)")]
		public string BaudRate
		{
			get
			{
				return this._BaudRate;
			}
			set
			{
				if ((this._BaudRate != value))
				{
					this.OnBaudRateChanging(value);
					this.SendPropertyChanging();
					this._BaudRate = value;
					this.SendPropertyChanged("BaudRate");
					this.OnBaudRateChanged();
				}
			}
		}
		
		[Column(Storage="_StopBits", DbType="NVarChar(50)")]
		public string StopBits
		{
			get
			{
				return this._StopBits;
			}
			set
			{
				if ((this._StopBits != value))
				{
					this.OnStopBitsChanging(value);
					this.SendPropertyChanging();
					this._StopBits = value;
					this.SendPropertyChanged("StopBits");
					this.OnStopBitsChanged();
				}
			}
		}
		
		[Column(Storage="_Parity", DbType="NVarChar(50)")]
		public string Parity
		{
			get
			{
				return this._Parity;
			}
			set
			{
				if ((this._Parity != value))
				{
					this.OnParityChanging(value);
					this.SendPropertyChanging();
					this._Parity = value;
					this.SendPropertyChanged("Parity");
					this.OnParityChanged();
				}
			}
		}
		
		[Column(Storage="_StartChar", DbType="NVarChar(50)")]
		public string StartChar
		{
			get
			{
				return this._StartChar;
			}
			set
			{
				if ((this._StartChar != value))
				{
					this.OnStartCharChanging(value);
					this.SendPropertyChanging();
					this._StartChar = value;
					this.SendPropertyChanged("StartChar");
					this.OnStartCharChanged();
				}
			}
		}
		
		[Column(Storage="_Lenght", DbType="NVarChar(50)")]
		public string Lenght
		{
			get
			{
				return this._Lenght;
			}
			set
			{
				if ((this._Lenght != value))
				{
					this.OnLenghtChanging(value);
					this.SendPropertyChanging();
					this._Lenght = value;
					this.SendPropertyChanged("Lenght");
					this.OnLenghtChanged();
				}
			}
		}
		
		[Column(Storage="_MachineName", DbType="NVarChar(200)")]
		public string MachineName
		{
			get
			{
				return this._MachineName;
			}
			set
			{
				if ((this._MachineName != value))
				{
					this.OnMachineNameChanging(value);
					this.SendPropertyChanging();
					this._MachineName = value;
					this.SendPropertyChanged("MachineName");
					this.OnMachineNameChanged();
				}
			}
		}
		
		[Column(Storage="_MachineIP", DbType="NVarChar(100)")]
		public string MachineIP
		{
			get
			{
				return this._MachineIP;
			}
			set
			{
				if ((this._MachineIP != value))
				{
					this.OnMachineIPChanging(value);
					this.SendPropertyChanging();
					this._MachineIP = value;
					this.SendPropertyChanged("MachineIP");
					this.OnMachineIPChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreatedDt
		{
			get
			{
				return this._CreatedDt;
			}
			set
			{
				if ((this._CreatedDt != value))
				{
					this.OnCreatedDtChanging(value);
					this.SendPropertyChanging();
					this._CreatedDt = value;
					this.SendPropertyChanged("CreatedDt");
					this.OnCreatedDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdatedDt
		{
			get
			{
				return this._UpdatedDt;
			}
			set
			{
				if ((this._UpdatedDt != value))
				{
					this.OnUpdatedDtChanging(value);
					this.SendPropertyChanging();
					this._UpdatedDt = value;
					this.SendPropertyChanged("UpdatedDt");
					this.OnUpdatedDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreatedBy", DbType="NVarChar(50)")]
		public string CreatedBy
		{
			get
			{
				return this._CreatedBy;
			}
			set
			{
				if ((this._CreatedBy != value))
				{
					this.OnCreatedByChanging(value);
					this.SendPropertyChanging();
					this._CreatedBy = value;
					this.SendPropertyChanged("CreatedBy");
					this.OnCreatedByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdatedBy", DbType="NVarChar(50)")]
		public string UpdatedBy
		{
			get
			{
				return this._UpdatedBy;
			}
			set
			{
				if ((this._UpdatedBy != value))
				{
					this.OnUpdatedByChanging(value);
					this.SendPropertyChanging();
					this._UpdatedBy = value;
					this.SendPropertyChanged("UpdatedBy");
					this.OnUpdatedByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.MstYardType")]
	public partial class MstYardType : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private long _ID;
		
		private string _Code;
		
		private string _Name;
		
		private string _Remarks;
		
		private System.Nullable<System.DateTime> _CreateDt;
		
		private System.Nullable<System.DateTime> _UpdateDt;
		
		private string _CreateBy;
		
		private string _UpdateBy;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(long value);
    partial void OnIDChanged();
    partial void OnCodeChanging(string value);
    partial void OnCodeChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnRemarksChanging(string value);
    partial void OnRemarksChanged();
    partial void OnCreateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnCreateDtChanged();
    partial void OnUpdateDtChanging(System.Nullable<System.DateTime> value);
    partial void OnUpdateDtChanged();
    partial void OnCreateByChanging(string value);
    partial void OnCreateByChanged();
    partial void OnUpdateByChanging(string value);
    partial void OnUpdateByChanged();
    #endregion
		
		public MstYardType()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="BigInt NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public long ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_Code", DbType="NVarChar(100)")]
		public string Code
		{
			get
			{
				return this._Code;
			}
			set
			{
				if ((this._Code != value))
				{
					this.OnCodeChanging(value);
					this.SendPropertyChanging();
					this._Code = value;
					this.SendPropertyChanged("Code");
					this.OnCodeChanged();
				}
			}
		}
		
		[Column(Storage="_Name", DbType="NVarChar(100)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[Column(Storage="_Remarks", DbType="NVarChar(200)")]
		public string Remarks
		{
			get
			{
				return this._Remarks;
			}
			set
			{
				if ((this._Remarks != value))
				{
					this.OnRemarksChanging(value);
					this.SendPropertyChanging();
					this._Remarks = value;
					this.SendPropertyChanged("Remarks");
					this.OnRemarksChanged();
				}
			}
		}
		
		[Column(Storage="_CreateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> CreateDt
		{
			get
			{
				return this._CreateDt;
			}
			set
			{
				if ((this._CreateDt != value))
				{
					this.OnCreateDtChanging(value);
					this.SendPropertyChanging();
					this._CreateDt = value;
					this.SendPropertyChanged("CreateDt");
					this.OnCreateDtChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateDt", DbType="DateTime")]
		public System.Nullable<System.DateTime> UpdateDt
		{
			get
			{
				return this._UpdateDt;
			}
			set
			{
				if ((this._UpdateDt != value))
				{
					this.OnUpdateDtChanging(value);
					this.SendPropertyChanging();
					this._UpdateDt = value;
					this.SendPropertyChanged("UpdateDt");
					this.OnUpdateDtChanged();
				}
			}
		}
		
		[Column(Storage="_CreateBy", DbType="NVarChar(100)")]
		public string CreateBy
		{
			get
			{
				return this._CreateBy;
			}
			set
			{
				if ((this._CreateBy != value))
				{
					this.OnCreateByChanging(value);
					this.SendPropertyChanging();
					this._CreateBy = value;
					this.SendPropertyChanged("CreateBy");
					this.OnCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_UpdateBy", DbType="NVarChar(100)")]
		public string UpdateBy
		{
			get
			{
				return this._UpdateBy;
			}
			set
			{
				if ((this._UpdateBy != value))
				{
					this.OnUpdateByChanging(value);
					this.SendPropertyChanging();
					this._UpdateBy = value;
					this.SendPropertyChanged("UpdateBy");
					this.OnUpdateByChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TrnsDispatch")]
	public partial class TrnsDispatch : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DocNum;
		
		private System.Nullable<System.DateTime> _FDocDate;
		
		private System.Nullable<int> _FShift;
		
		private string _FTime;
		
		private string _SBRNum;
		
		private System.Nullable<System.DateTime> _SBRDate;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _ItemCode;
		
		private string _ItemName;
		
		private string _ItemGroupCode;
		
		private string _ItemGroupName;
		
		private System.Nullable<int> _DaySeries;
		
		private System.Nullable<decimal> _OrderQuantity;
		
		private System.Nullable<decimal> _BalanceQuantity;
		
		private System.Nullable<int> _PackerId;
		
		private string _VehicleNum;
		
		private string _DriverCNIC;
		
		private string _DriverName;
		
		private string _DriverDocument;
		
		private System.Nullable<System.DateTime> _FWeighmentDate;
		
		private System.Nullable<decimal> _FWeighmentKG;
		
		private string _FWeighmentTime;
		
		private System.Nullable<decimal> _FWeighmentTon;
		
		private System.Nullable<int> _TransportID;
		
		private string _TransportCode;
		
		private string _TransportName;
		
		private System.Nullable<System.DateTime> _FCreateDate;
		
		private System.Nullable<System.DateTime> _FUpdateDate;
		
		private string _FCreateBy;
		
		private string _FUpdateBy;
		
		private System.Nullable<bool> _FlgSecondWeight;
		
		private System.Nullable<System.DateTime> _SDocDate;
		
		private System.Nullable<int> _SShift;
		
		private string _STime;
		
		private System.Nullable<System.DateTime> _SWeighmentDate;
		
		private string _SWeighmentTime;
		
		private System.Nullable<decimal> _SWeighmentKG;
		
		private System.Nullable<decimal> _SWeighmentTon;
		
		private System.Nullable<decimal> _NetWeightKG;
		
		private System.Nullable<decimal> _NetWeightTon;
		
		private System.Nullable<decimal> _DispatchQuantity;
		
		private System.Nullable<System.DateTime> _SCreateDate;
		
		private string _SCreateBy;
		
		private System.Nullable<System.DateTime> _SUpdateDate;
		
		private string _SUpdateBy;
		
		private System.Nullable<bool> _FlgPosted;
		
		private System.Nullable<bool> _Flg1Rpt;
		
		private System.Nullable<bool> _Flg2Rpt;
		
		private System.Nullable<bool> _FlgWBrpt;
		
		private System.Nullable<bool> _FlgMulti;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocNumChanging(System.Nullable<int> value);
    partial void OnDocNumChanged();
    partial void OnFDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFDocDateChanged();
    partial void OnFShiftChanging(System.Nullable<int> value);
    partial void OnFShiftChanged();
    partial void OnFTimeChanging(string value);
    partial void OnFTimeChanged();
    partial void OnSBRNumChanging(string value);
    partial void OnSBRNumChanged();
    partial void OnSBRDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSBRDateChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnItemGroupCodeChanging(string value);
    partial void OnItemGroupCodeChanged();
    partial void OnItemGroupNameChanging(string value);
    partial void OnItemGroupNameChanged();
    partial void OnDaySeriesChanging(System.Nullable<int> value);
    partial void OnDaySeriesChanged();
    partial void OnOrderQuantityChanging(System.Nullable<decimal> value);
    partial void OnOrderQuantityChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<decimal> value);
    partial void OnBalanceQuantityChanged();
    partial void OnPackerIdChanging(System.Nullable<int> value);
    partial void OnPackerIdChanged();
    partial void OnVehicleNumChanging(string value);
    partial void OnVehicleNumChanged();
    partial void OnDriverCNICChanging(string value);
    partial void OnDriverCNICChanged();
    partial void OnDriverNameChanging(string value);
    partial void OnDriverNameChanged();
    partial void OnDriverDocumentChanging(string value);
    partial void OnDriverDocumentChanged();
    partial void OnFWeighmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFWeighmentDateChanged();
    partial void OnFWeighmentKGChanging(System.Nullable<decimal> value);
    partial void OnFWeighmentKGChanged();
    partial void OnFWeighmentTimeChanging(string value);
    partial void OnFWeighmentTimeChanged();
    partial void OnFWeighmentTonChanging(System.Nullable<decimal> value);
    partial void OnFWeighmentTonChanged();
    partial void OnTransportIDChanging(System.Nullable<int> value);
    partial void OnTransportIDChanged();
    partial void OnTransportCodeChanging(string value);
    partial void OnTransportCodeChanged();
    partial void OnTransportNameChanging(string value);
    partial void OnTransportNameChanged();
    partial void OnFCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFCreateDateChanged();
    partial void OnFUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFUpdateDateChanged();
    partial void OnFCreateByChanging(string value);
    partial void OnFCreateByChanged();
    partial void OnFUpdateByChanging(string value);
    partial void OnFUpdateByChanged();
    partial void OnFlgSecondWeightChanging(System.Nullable<bool> value);
    partial void OnFlgSecondWeightChanged();
    partial void OnSDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSDocDateChanged();
    partial void OnSShiftChanging(System.Nullable<int> value);
    partial void OnSShiftChanged();
    partial void OnSTimeChanging(string value);
    partial void OnSTimeChanged();
    partial void OnSWeighmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSWeighmentDateChanged();
    partial void OnSWeighmentTimeChanging(string value);
    partial void OnSWeighmentTimeChanged();
    partial void OnSWeighmentKGChanging(System.Nullable<decimal> value);
    partial void OnSWeighmentKGChanged();
    partial void OnSWeighmentTonChanging(System.Nullable<decimal> value);
    partial void OnSWeighmentTonChanged();
    partial void OnNetWeightKGChanging(System.Nullable<decimal> value);
    partial void OnNetWeightKGChanged();
    partial void OnNetWeightTonChanging(System.Nullable<decimal> value);
    partial void OnNetWeightTonChanged();
    partial void OnDispatchQuantityChanging(System.Nullable<decimal> value);
    partial void OnDispatchQuantityChanged();
    partial void OnSCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSCreateDateChanged();
    partial void OnSCreateByChanging(string value);
    partial void OnSCreateByChanged();
    partial void OnSUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSUpdateDateChanged();
    partial void OnSUpdateByChanging(string value);
    partial void OnSUpdateByChanged();
    partial void OnFlgPostedChanging(System.Nullable<bool> value);
    partial void OnFlgPostedChanged();
    partial void OnFlg1RptChanging(System.Nullable<bool> value);
    partial void OnFlg1RptChanged();
    partial void OnFlg2RptChanging(System.Nullable<bool> value);
    partial void OnFlg2RptChanged();
    partial void OnFlgWBrptChanging(System.Nullable<bool> value);
    partial void OnFlgWBrptChanged();
    partial void OnFlgMultiChanging(System.Nullable<bool> value);
    partial void OnFlgMultiChanged();
    #endregion
		
		public TrnsDispatch()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocNum", DbType="Int")]
		public System.Nullable<int> DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[Column(Storage="_FDocDate", DbType="Date")]
		public System.Nullable<System.DateTime> FDocDate
		{
			get
			{
				return this._FDocDate;
			}
			set
			{
				if ((this._FDocDate != value))
				{
					this.OnFDocDateChanging(value);
					this.SendPropertyChanging();
					this._FDocDate = value;
					this.SendPropertyChanged("FDocDate");
					this.OnFDocDateChanged();
				}
			}
		}
		
		[Column(Storage="_FShift", DbType="Int")]
		public System.Nullable<int> FShift
		{
			get
			{
				return this._FShift;
			}
			set
			{
				if ((this._FShift != value))
				{
					this.OnFShiftChanging(value);
					this.SendPropertyChanging();
					this._FShift = value;
					this.SendPropertyChanged("FShift");
					this.OnFShiftChanged();
				}
			}
		}
		
		[Column(Storage="_FTime", DbType="NVarChar(50)")]
		public string FTime
		{
			get
			{
				return this._FTime;
			}
			set
			{
				if ((this._FTime != value))
				{
					this.OnFTimeChanging(value);
					this.SendPropertyChanging();
					this._FTime = value;
					this.SendPropertyChanged("FTime");
					this.OnFTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SBRNum", DbType="NVarChar(50)")]
		public string SBRNum
		{
			get
			{
				return this._SBRNum;
			}
			set
			{
				if ((this._SBRNum != value))
				{
					this.OnSBRNumChanging(value);
					this.SendPropertyChanging();
					this._SBRNum = value;
					this.SendPropertyChanged("SBRNum");
					this.OnSBRNumChanged();
				}
			}
		}
		
		[Column(Storage="_SBRDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SBRDate
		{
			get
			{
				return this._SBRDate;
			}
			set
			{
				if ((this._SBRDate != value))
				{
					this.OnSBRDateChanging(value);
					this.SendPropertyChanging();
					this._SBRDate = value;
					this.SendPropertyChanged("SBRDate");
					this.OnSBRDateChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerCode", DbType="NVarChar(50)")]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerName", DbType="NVarChar(100)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemName", DbType="NVarChar(100)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[Column(Storage="_ItemGroupCode", DbType="NVarChar(100)")]
		public string ItemGroupCode
		{
			get
			{
				return this._ItemGroupCode;
			}
			set
			{
				if ((this._ItemGroupCode != value))
				{
					this.OnItemGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupCode = value;
					this.SendPropertyChanged("ItemGroupCode");
					this.OnItemGroupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemGroupName", DbType="NVarChar(100)")]
		public string ItemGroupName
		{
			get
			{
				return this._ItemGroupName;
			}
			set
			{
				if ((this._ItemGroupName != value))
				{
					this.OnItemGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupName = value;
					this.SendPropertyChanged("ItemGroupName");
					this.OnItemGroupNameChanged();
				}
			}
		}
		
		[Column(Storage="_DaySeries", DbType="Int")]
		public System.Nullable<int> DaySeries
		{
			get
			{
				return this._DaySeries;
			}
			set
			{
				if ((this._DaySeries != value))
				{
					this.OnDaySeriesChanging(value);
					this.SendPropertyChanging();
					this._DaySeries = value;
					this.SendPropertyChanged("DaySeries");
					this.OnDaySeriesChanged();
				}
			}
		}
		
		[Column(Storage="_OrderQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> OrderQuantity
		{
			get
			{
				return this._OrderQuantity;
			}
			set
			{
				if ((this._OrderQuantity != value))
				{
					this.OnOrderQuantityChanging(value);
					this.SendPropertyChanging();
					this._OrderQuantity = value;
					this.SendPropertyChanged("OrderQuantity");
					this.OnOrderQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_BalanceQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> BalanceQuantity
		{
			get
			{
				return this._BalanceQuantity;
			}
			set
			{
				if ((this._BalanceQuantity != value))
				{
					this.OnBalanceQuantityChanging(value);
					this.SendPropertyChanging();
					this._BalanceQuantity = value;
					this.SendPropertyChanged("BalanceQuantity");
					this.OnBalanceQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_PackerId", DbType="Int")]
		public System.Nullable<int> PackerId
		{
			get
			{
				return this._PackerId;
			}
			set
			{
				if ((this._PackerId != value))
				{
					this.OnPackerIdChanging(value);
					this.SendPropertyChanging();
					this._PackerId = value;
					this.SendPropertyChanged("PackerId");
					this.OnPackerIdChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleNum", DbType="NVarChar(50)")]
		public string VehicleNum
		{
			get
			{
				return this._VehicleNum;
			}
			set
			{
				if ((this._VehicleNum != value))
				{
					this.OnVehicleNumChanging(value);
					this.SendPropertyChanging();
					this._VehicleNum = value;
					this.SendPropertyChanged("VehicleNum");
					this.OnVehicleNumChanged();
				}
			}
		}
		
		[Column(Storage="_DriverCNIC", DbType="NVarChar(50)")]
		public string DriverCNIC
		{
			get
			{
				return this._DriverCNIC;
			}
			set
			{
				if ((this._DriverCNIC != value))
				{
					this.OnDriverCNICChanging(value);
					this.SendPropertyChanging();
					this._DriverCNIC = value;
					this.SendPropertyChanged("DriverCNIC");
					this.OnDriverCNICChanged();
				}
			}
		}
		
		[Column(Storage="_DriverName", DbType="NVarChar(100)")]
		public string DriverName
		{
			get
			{
				return this._DriverName;
			}
			set
			{
				if ((this._DriverName != value))
				{
					this.OnDriverNameChanging(value);
					this.SendPropertyChanging();
					this._DriverName = value;
					this.SendPropertyChanged("DriverName");
					this.OnDriverNameChanged();
				}
			}
		}
		
		[Column(Storage="_DriverDocument", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DriverDocument
		{
			get
			{
				return this._DriverDocument;
			}
			set
			{
				if ((this._DriverDocument != value))
				{
					this.OnDriverDocumentChanging(value);
					this.SendPropertyChanging();
					this._DriverDocument = value;
					this.SendPropertyChanged("DriverDocument");
					this.OnDriverDocumentChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> FWeighmentDate
		{
			get
			{
				return this._FWeighmentDate;
			}
			set
			{
				if ((this._FWeighmentDate != value))
				{
					this.OnFWeighmentDateChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentDate = value;
					this.SendPropertyChanged("FWeighmentDate");
					this.OnFWeighmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> FWeighmentKG
		{
			get
			{
				return this._FWeighmentKG;
			}
			set
			{
				if ((this._FWeighmentKG != value))
				{
					this.OnFWeighmentKGChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentKG = value;
					this.SendPropertyChanged("FWeighmentKG");
					this.OnFWeighmentKGChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentTime", DbType="NVarChar(50)")]
		public string FWeighmentTime
		{
			get
			{
				return this._FWeighmentTime;
			}
			set
			{
				if ((this._FWeighmentTime != value))
				{
					this.OnFWeighmentTimeChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentTime = value;
					this.SendPropertyChanged("FWeighmentTime");
					this.OnFWeighmentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> FWeighmentTon
		{
			get
			{
				return this._FWeighmentTon;
			}
			set
			{
				if ((this._FWeighmentTon != value))
				{
					this.OnFWeighmentTonChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentTon = value;
					this.SendPropertyChanged("FWeighmentTon");
					this.OnFWeighmentTonChanged();
				}
			}
		}
		
		[Column(Storage="_TransportID", DbType="Int")]
		public System.Nullable<int> TransportID
		{
			get
			{
				return this._TransportID;
			}
			set
			{
				if ((this._TransportID != value))
				{
					this.OnTransportIDChanging(value);
					this.SendPropertyChanging();
					this._TransportID = value;
					this.SendPropertyChanged("TransportID");
					this.OnTransportIDChanged();
				}
			}
		}
		
		[Column(Storage="_TransportCode", DbType="NVarChar(50)")]
		public string TransportCode
		{
			get
			{
				return this._TransportCode;
			}
			set
			{
				if ((this._TransportCode != value))
				{
					this.OnTransportCodeChanging(value);
					this.SendPropertyChanging();
					this._TransportCode = value;
					this.SendPropertyChanged("TransportCode");
					this.OnTransportCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransportName", DbType="NVarChar(50)")]
		public string TransportName
		{
			get
			{
				return this._TransportName;
			}
			set
			{
				if ((this._TransportName != value))
				{
					this.OnTransportNameChanging(value);
					this.SendPropertyChanging();
					this._TransportName = value;
					this.SendPropertyChanged("TransportName");
					this.OnTransportNameChanged();
				}
			}
		}
		
		[Column(Storage="_FCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FCreateDate
		{
			get
			{
				return this._FCreateDate;
			}
			set
			{
				if ((this._FCreateDate != value))
				{
					this.OnFCreateDateChanging(value);
					this.SendPropertyChanging();
					this._FCreateDate = value;
					this.SendPropertyChanged("FCreateDate");
					this.OnFCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_FUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FUpdateDate
		{
			get
			{
				return this._FUpdateDate;
			}
			set
			{
				if ((this._FUpdateDate != value))
				{
					this.OnFUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._FUpdateDate = value;
					this.SendPropertyChanged("FUpdateDate");
					this.OnFUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_FCreateBy", DbType="NVarChar(50)")]
		public string FCreateBy
		{
			get
			{
				return this._FCreateBy;
			}
			set
			{
				if ((this._FCreateBy != value))
				{
					this.OnFCreateByChanging(value);
					this.SendPropertyChanging();
					this._FCreateBy = value;
					this.SendPropertyChanged("FCreateBy");
					this.OnFCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_FUpdateBy", DbType="NVarChar(50)")]
		public string FUpdateBy
		{
			get
			{
				return this._FUpdateBy;
			}
			set
			{
				if ((this._FUpdateBy != value))
				{
					this.OnFUpdateByChanging(value);
					this.SendPropertyChanging();
					this._FUpdateBy = value;
					this.SendPropertyChanged("FUpdateBy");
					this.OnFUpdateByChanged();
				}
			}
		}
		
		[Column(Name="flgSecondWeight", Storage="_FlgSecondWeight", DbType="Bit")]
		public System.Nullable<bool> FlgSecondWeight
		{
			get
			{
				return this._FlgSecondWeight;
			}
			set
			{
				if ((this._FlgSecondWeight != value))
				{
					this.OnFlgSecondWeightChanging(value);
					this.SendPropertyChanging();
					this._FlgSecondWeight = value;
					this.SendPropertyChanged("FlgSecondWeight");
					this.OnFlgSecondWeightChanged();
				}
			}
		}
		
		[Column(Storage="_SDocDate", DbType="Date")]
		public System.Nullable<System.DateTime> SDocDate
		{
			get
			{
				return this._SDocDate;
			}
			set
			{
				if ((this._SDocDate != value))
				{
					this.OnSDocDateChanging(value);
					this.SendPropertyChanging();
					this._SDocDate = value;
					this.SendPropertyChanged("SDocDate");
					this.OnSDocDateChanged();
				}
			}
		}
		
		[Column(Storage="_SShift", DbType="Int")]
		public System.Nullable<int> SShift
		{
			get
			{
				return this._SShift;
			}
			set
			{
				if ((this._SShift != value))
				{
					this.OnSShiftChanging(value);
					this.SendPropertyChanging();
					this._SShift = value;
					this.SendPropertyChanged("SShift");
					this.OnSShiftChanged();
				}
			}
		}
		
		[Column(Storage="_STime", DbType="NVarChar(50)")]
		public string STime
		{
			get
			{
				return this._STime;
			}
			set
			{
				if ((this._STime != value))
				{
					this.OnSTimeChanging(value);
					this.SendPropertyChanging();
					this._STime = value;
					this.SendPropertyChanged("STime");
					this.OnSTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> SWeighmentDate
		{
			get
			{
				return this._SWeighmentDate;
			}
			set
			{
				if ((this._SWeighmentDate != value))
				{
					this.OnSWeighmentDateChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentDate = value;
					this.SendPropertyChanged("SWeighmentDate");
					this.OnSWeighmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentTime", DbType="NVarChar(50)")]
		public string SWeighmentTime
		{
			get
			{
				return this._SWeighmentTime;
			}
			set
			{
				if ((this._SWeighmentTime != value))
				{
					this.OnSWeighmentTimeChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentTime = value;
					this.SendPropertyChanged("SWeighmentTime");
					this.OnSWeighmentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SWeighmentKG
		{
			get
			{
				return this._SWeighmentKG;
			}
			set
			{
				if ((this._SWeighmentKG != value))
				{
					this.OnSWeighmentKGChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentKG = value;
					this.SendPropertyChanged("SWeighmentKG");
					this.OnSWeighmentKGChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SWeighmentTon
		{
			get
			{
				return this._SWeighmentTon;
			}
			set
			{
				if ((this._SWeighmentTon != value))
				{
					this.OnSWeighmentTonChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentTon = value;
					this.SendPropertyChanged("SWeighmentTon");
					this.OnSWeighmentTonChanged();
				}
			}
		}
		
		[Column(Storage="_NetWeightKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> NetWeightKG
		{
			get
			{
				return this._NetWeightKG;
			}
			set
			{
				if ((this._NetWeightKG != value))
				{
					this.OnNetWeightKGChanging(value);
					this.SendPropertyChanging();
					this._NetWeightKG = value;
					this.SendPropertyChanged("NetWeightKG");
					this.OnNetWeightKGChanged();
				}
			}
		}
		
		[Column(Storage="_NetWeightTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> NetWeightTon
		{
			get
			{
				return this._NetWeightTon;
			}
			set
			{
				if ((this._NetWeightTon != value))
				{
					this.OnNetWeightTonChanging(value);
					this.SendPropertyChanging();
					this._NetWeightTon = value;
					this.SendPropertyChanged("NetWeightTon");
					this.OnNetWeightTonChanged();
				}
			}
		}
		
		[Column(Storage="_DispatchQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> DispatchQuantity
		{
			get
			{
				return this._DispatchQuantity;
			}
			set
			{
				if ((this._DispatchQuantity != value))
				{
					this.OnDispatchQuantityChanging(value);
					this.SendPropertyChanging();
					this._DispatchQuantity = value;
					this.SendPropertyChanged("DispatchQuantity");
					this.OnDispatchQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_SCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SCreateDate
		{
			get
			{
				return this._SCreateDate;
			}
			set
			{
				if ((this._SCreateDate != value))
				{
					this.OnSCreateDateChanging(value);
					this.SendPropertyChanging();
					this._SCreateDate = value;
					this.SendPropertyChanged("SCreateDate");
					this.OnSCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_SCreateBy", DbType="NVarChar(50)")]
		public string SCreateBy
		{
			get
			{
				return this._SCreateBy;
			}
			set
			{
				if ((this._SCreateBy != value))
				{
					this.OnSCreateByChanging(value);
					this.SendPropertyChanging();
					this._SCreateBy = value;
					this.SendPropertyChanged("SCreateBy");
					this.OnSCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_SUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SUpdateDate
		{
			get
			{
				return this._SUpdateDate;
			}
			set
			{
				if ((this._SUpdateDate != value))
				{
					this.OnSUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._SUpdateDate = value;
					this.SendPropertyChanged("SUpdateDate");
					this.OnSUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_SUpdateBy", DbType="NVarChar(50)")]
		public string SUpdateBy
		{
			get
			{
				return this._SUpdateBy;
			}
			set
			{
				if ((this._SUpdateBy != value))
				{
					this.OnSUpdateByChanging(value);
					this.SendPropertyChanging();
					this._SUpdateBy = value;
					this.SendPropertyChanged("SUpdateBy");
					this.OnSUpdateByChanged();
				}
			}
		}
		
		[Column(Name="flgPosted", Storage="_FlgPosted", DbType="Bit")]
		public System.Nullable<bool> FlgPosted
		{
			get
			{
				return this._FlgPosted;
			}
			set
			{
				if ((this._FlgPosted != value))
				{
					this.OnFlgPostedChanging(value);
					this.SendPropertyChanging();
					this._FlgPosted = value;
					this.SendPropertyChanged("FlgPosted");
					this.OnFlgPostedChanged();
				}
			}
		}
		
		[Column(Name="flg1Rpt", Storage="_Flg1Rpt", DbType="Bit")]
		public System.Nullable<bool> Flg1Rpt
		{
			get
			{
				return this._Flg1Rpt;
			}
			set
			{
				if ((this._Flg1Rpt != value))
				{
					this.OnFlg1RptChanging(value);
					this.SendPropertyChanging();
					this._Flg1Rpt = value;
					this.SendPropertyChanged("Flg1Rpt");
					this.OnFlg1RptChanged();
				}
			}
		}
		
		[Column(Name="flg2Rpt", Storage="_Flg2Rpt", DbType="Bit")]
		public System.Nullable<bool> Flg2Rpt
		{
			get
			{
				return this._Flg2Rpt;
			}
			set
			{
				if ((this._Flg2Rpt != value))
				{
					this.OnFlg2RptChanging(value);
					this.SendPropertyChanging();
					this._Flg2Rpt = value;
					this.SendPropertyChanged("Flg2Rpt");
					this.OnFlg2RptChanged();
				}
			}
		}
		
		[Column(Name="flgWBrpt", Storage="_FlgWBrpt", DbType="Bit")]
		public System.Nullable<bool> FlgWBrpt
		{
			get
			{
				return this._FlgWBrpt;
			}
			set
			{
				if ((this._FlgWBrpt != value))
				{
					this.OnFlgWBrptChanging(value);
					this.SendPropertyChanging();
					this._FlgWBrpt = value;
					this.SendPropertyChanged("FlgWBrpt");
					this.OnFlgWBrptChanged();
				}
			}
		}
		
		[Column(Name="flgMulti", Storage="_FlgMulti", DbType="Bit")]
		public System.Nullable<bool> FlgMulti
		{
			get
			{
				return this._FlgMulti;
			}
			set
			{
				if ((this._FlgMulti != value))
				{
					this.OnFlgMultiChanging(value);
					this.SendPropertyChanging();
					this._FlgMulti = value;
					this.SendPropertyChanged("FlgMulti");
					this.OnFlgMultiChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TrnsDispatchMulti")]
	public partial class TrnsDispatchMulti : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private string _SBRNum;
		
		private string _CardCode;
		
		private string _ItemCode;
		
		private System.Nullable<int> _DocNum;
		
		private System.Nullable<decimal> _OrderQty;
		
		private System.Nullable<decimal> _BalanceQty;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnSBRNumChanging(string value);
    partial void OnSBRNumChanged();
    partial void OnCardCodeChanging(string value);
    partial void OnCardCodeChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnDocNumChanging(System.Nullable<int> value);
    partial void OnDocNumChanged();
    partial void OnOrderQtyChanging(System.Nullable<decimal> value);
    partial void OnOrderQtyChanged();
    partial void OnBalanceQtyChanging(System.Nullable<decimal> value);
    partial void OnBalanceQtyChanged();
    #endregion
		
		public TrnsDispatchMulti()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_SBRNum", DbType="NVarChar(50)")]
		public string SBRNum
		{
			get
			{
				return this._SBRNum;
			}
			set
			{
				if ((this._SBRNum != value))
				{
					this.OnSBRNumChanging(value);
					this.SendPropertyChanging();
					this._SBRNum = value;
					this.SendPropertyChanged("SBRNum");
					this.OnSBRNumChanged();
				}
			}
		}
		
		[Column(Storage="_CardCode", DbType="NVarChar(50)")]
		public string CardCode
		{
			get
			{
				return this._CardCode;
			}
			set
			{
				if ((this._CardCode != value))
				{
					this.OnCardCodeChanging(value);
					this.SendPropertyChanging();
					this._CardCode = value;
					this.SendPropertyChanged("CardCode");
					this.OnCardCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_DocNum", DbType="Int")]
		public System.Nullable<int> DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[Column(Storage="_OrderQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> OrderQty
		{
			get
			{
				return this._OrderQty;
			}
			set
			{
				if ((this._OrderQty != value))
				{
					this.OnOrderQtyChanging(value);
					this.SendPropertyChanging();
					this._OrderQty = value;
					this.SendPropertyChanged("OrderQty");
					this.OnOrderQtyChanged();
				}
			}
		}
		
		[Column(Storage="_BalanceQty", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> BalanceQty
		{
			get
			{
				return this._BalanceQty;
			}
			set
			{
				if ((this._BalanceQty != value))
				{
					this.OnBalanceQtyChanging(value);
					this.SendPropertyChanging();
					this._BalanceQty = value;
					this.SendPropertyChanged("BalanceQty");
					this.OnBalanceQtyChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TrnsDispatchReturn")]
	public partial class TrnsDispatchReturn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DocNum;
		
		private System.Nullable<System.DateTime> _FDocDate;
		
		private System.Nullable<int> _FShift;
		
		private string _FTime;
		
		private string _DONum;
		
		private System.Nullable<System.DateTime> _DODate;
		
		private string _CustomerCode;
		
		private string _CustomerName;
		
		private string _ItemCode;
		
		private string _ItemName;
		
		private System.Nullable<int> _DaySeries;
		
		private System.Nullable<decimal> _DOQuantity;
		
		private string _VehicleNum;
		
		private string _DriverCNIC;
		
		private string _DriverName;
		
		private string _DriverDocument;
		
		private System.Nullable<System.DateTime> _FWeighmentDate;
		
		private System.Nullable<decimal> _FWeighmentKG;
		
		private string _FWeighmentTime;
		
		private System.Nullable<decimal> _FWeighmentTon;
		
		private System.Nullable<int> _TransportID;
		
		private string _TransportCode;
		
		private string _TransportName;
		
		private System.Nullable<System.DateTime> _FCreateDate;
		
		private System.Nullable<System.DateTime> _FUpdateDate;
		
		private string _FCreateBy;
		
		private string _FUpdateBy;
		
		private System.Nullable<bool> _FlgSecondWeight;
		
		private System.Nullable<System.DateTime> _SDocDate;
		
		private System.Nullable<int> _SShift;
		
		private string _STime;
		
		private System.Nullable<System.DateTime> _SWeighmentDate;
		
		private string _SWeighmentTime;
		
		private System.Nullable<decimal> _SWeighmentKG;
		
		private System.Nullable<decimal> _SWeighmentTon;
		
		private System.Nullable<decimal> _NetWeightKG;
		
		private System.Nullable<decimal> _NetWeightTon;
		
		private System.Nullable<decimal> _ReturnQuantity;
		
		private System.Nullable<System.DateTime> _SCreateDate;
		
		private string _SCreateBy;
		
		private System.Nullable<System.DateTime> _SUpdateDate;
		
		private string _SUpdateBy;
		
		private string _ItemGroupCode;
		
		private string _ItemGroupName;
		
		private System.Nullable<decimal> _BalanceQuantity;
		
		private System.Nullable<bool> _FlgPosted;
		
		private System.Nullable<bool> _Flg1Rpt;
		
		private System.Nullable<bool> _Flg2Rpt;
		
		private System.Nullable<bool> _FlgWBrpt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocNumChanging(System.Nullable<int> value);
    partial void OnDocNumChanged();
    partial void OnFDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFDocDateChanged();
    partial void OnFShiftChanging(System.Nullable<int> value);
    partial void OnFShiftChanged();
    partial void OnFTimeChanging(string value);
    partial void OnFTimeChanged();
    partial void OnDONumChanging(string value);
    partial void OnDONumChanged();
    partial void OnDODateChanging(System.Nullable<System.DateTime> value);
    partial void OnDODateChanged();
    partial void OnCustomerCodeChanging(string value);
    partial void OnCustomerCodeChanged();
    partial void OnCustomerNameChanging(string value);
    partial void OnCustomerNameChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnDaySeriesChanging(System.Nullable<int> value);
    partial void OnDaySeriesChanged();
    partial void OnDOQuantityChanging(System.Nullable<decimal> value);
    partial void OnDOQuantityChanged();
    partial void OnVehicleNumChanging(string value);
    partial void OnVehicleNumChanged();
    partial void OnDriverCNICChanging(string value);
    partial void OnDriverCNICChanged();
    partial void OnDriverNameChanging(string value);
    partial void OnDriverNameChanged();
    partial void OnDriverDocumentChanging(string value);
    partial void OnDriverDocumentChanged();
    partial void OnFWeighmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFWeighmentDateChanged();
    partial void OnFWeighmentKGChanging(System.Nullable<decimal> value);
    partial void OnFWeighmentKGChanged();
    partial void OnFWeighmentTimeChanging(string value);
    partial void OnFWeighmentTimeChanged();
    partial void OnFWeighmentTonChanging(System.Nullable<decimal> value);
    partial void OnFWeighmentTonChanged();
    partial void OnTransportIDChanging(System.Nullable<int> value);
    partial void OnTransportIDChanged();
    partial void OnTransportCodeChanging(string value);
    partial void OnTransportCodeChanged();
    partial void OnTransportNameChanging(string value);
    partial void OnTransportNameChanged();
    partial void OnFCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFCreateDateChanged();
    partial void OnFUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFUpdateDateChanged();
    partial void OnFCreateByChanging(string value);
    partial void OnFCreateByChanged();
    partial void OnFUpdateByChanging(string value);
    partial void OnFUpdateByChanged();
    partial void OnFlgSecondWeightChanging(System.Nullable<bool> value);
    partial void OnFlgSecondWeightChanged();
    partial void OnSDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSDocDateChanged();
    partial void OnSShiftChanging(System.Nullable<int> value);
    partial void OnSShiftChanged();
    partial void OnSTimeChanging(string value);
    partial void OnSTimeChanged();
    partial void OnSWeighmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSWeighmentDateChanged();
    partial void OnSWeighmentTimeChanging(string value);
    partial void OnSWeighmentTimeChanged();
    partial void OnSWeighmentKGChanging(System.Nullable<decimal> value);
    partial void OnSWeighmentKGChanged();
    partial void OnSWeighmentTonChanging(System.Nullable<decimal> value);
    partial void OnSWeighmentTonChanged();
    partial void OnNetWeightKGChanging(System.Nullable<decimal> value);
    partial void OnNetWeightKGChanged();
    partial void OnNetWeightTonChanging(System.Nullable<decimal> value);
    partial void OnNetWeightTonChanged();
    partial void OnReturnQuantityChanging(System.Nullable<decimal> value);
    partial void OnReturnQuantityChanged();
    partial void OnSCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSCreateDateChanged();
    partial void OnSCreateByChanging(string value);
    partial void OnSCreateByChanged();
    partial void OnSUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSUpdateDateChanged();
    partial void OnSUpdateByChanging(string value);
    partial void OnSUpdateByChanged();
    partial void OnItemGroupCodeChanging(string value);
    partial void OnItemGroupCodeChanged();
    partial void OnItemGroupNameChanging(string value);
    partial void OnItemGroupNameChanged();
    partial void OnBalanceQuantityChanging(System.Nullable<decimal> value);
    partial void OnBalanceQuantityChanged();
    partial void OnFlgPostedChanging(System.Nullable<bool> value);
    partial void OnFlgPostedChanged();
    partial void OnFlg1RptChanging(System.Nullable<bool> value);
    partial void OnFlg1RptChanged();
    partial void OnFlg2RptChanging(System.Nullable<bool> value);
    partial void OnFlg2RptChanged();
    partial void OnFlgWBrptChanging(System.Nullable<bool> value);
    partial void OnFlgWBrptChanged();
    #endregion
		
		public TrnsDispatchReturn()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocNum", DbType="Int")]
		public System.Nullable<int> DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[Column(Storage="_FDocDate", DbType="Date")]
		public System.Nullable<System.DateTime> FDocDate
		{
			get
			{
				return this._FDocDate;
			}
			set
			{
				if ((this._FDocDate != value))
				{
					this.OnFDocDateChanging(value);
					this.SendPropertyChanging();
					this._FDocDate = value;
					this.SendPropertyChanged("FDocDate");
					this.OnFDocDateChanged();
				}
			}
		}
		
		[Column(Storage="_FShift", DbType="Int")]
		public System.Nullable<int> FShift
		{
			get
			{
				return this._FShift;
			}
			set
			{
				if ((this._FShift != value))
				{
					this.OnFShiftChanging(value);
					this.SendPropertyChanging();
					this._FShift = value;
					this.SendPropertyChanged("FShift");
					this.OnFShiftChanged();
				}
			}
		}
		
		[Column(Storage="_FTime", DbType="NVarChar(50)")]
		public string FTime
		{
			get
			{
				return this._FTime;
			}
			set
			{
				if ((this._FTime != value))
				{
					this.OnFTimeChanging(value);
					this.SendPropertyChanging();
					this._FTime = value;
					this.SendPropertyChanged("FTime");
					this.OnFTimeChanged();
				}
			}
		}
		
		[Column(Storage="_DONum", DbType="NVarChar(50)")]
		public string DONum
		{
			get
			{
				return this._DONum;
			}
			set
			{
				if ((this._DONum != value))
				{
					this.OnDONumChanging(value);
					this.SendPropertyChanging();
					this._DONum = value;
					this.SendPropertyChanged("DONum");
					this.OnDONumChanged();
				}
			}
		}
		
		[Column(Storage="_DODate", DbType="DateTime")]
		public System.Nullable<System.DateTime> DODate
		{
			get
			{
				return this._DODate;
			}
			set
			{
				if ((this._DODate != value))
				{
					this.OnDODateChanging(value);
					this.SendPropertyChanging();
					this._DODate = value;
					this.SendPropertyChanged("DODate");
					this.OnDODateChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerCode", DbType="NVarChar(50)")]
		public string CustomerCode
		{
			get
			{
				return this._CustomerCode;
			}
			set
			{
				if ((this._CustomerCode != value))
				{
					this.OnCustomerCodeChanging(value);
					this.SendPropertyChanging();
					this._CustomerCode = value;
					this.SendPropertyChanged("CustomerCode");
					this.OnCustomerCodeChanged();
				}
			}
		}
		
		[Column(Storage="_CustomerName", DbType="NVarChar(100)")]
		public string CustomerName
		{
			get
			{
				return this._CustomerName;
			}
			set
			{
				if ((this._CustomerName != value))
				{
					this.OnCustomerNameChanging(value);
					this.SendPropertyChanging();
					this._CustomerName = value;
					this.SendPropertyChanged("CustomerName");
					this.OnCustomerNameChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemName", DbType="NVarChar(100)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[Column(Storage="_DaySeries", DbType="Int")]
		public System.Nullable<int> DaySeries
		{
			get
			{
				return this._DaySeries;
			}
			set
			{
				if ((this._DaySeries != value))
				{
					this.OnDaySeriesChanging(value);
					this.SendPropertyChanging();
					this._DaySeries = value;
					this.SendPropertyChanged("DaySeries");
					this.OnDaySeriesChanged();
				}
			}
		}
		
		[Column(Storage="_DOQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> DOQuantity
		{
			get
			{
				return this._DOQuantity;
			}
			set
			{
				if ((this._DOQuantity != value))
				{
					this.OnDOQuantityChanging(value);
					this.SendPropertyChanging();
					this._DOQuantity = value;
					this.SendPropertyChanged("DOQuantity");
					this.OnDOQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleNum", DbType="NVarChar(50)")]
		public string VehicleNum
		{
			get
			{
				return this._VehicleNum;
			}
			set
			{
				if ((this._VehicleNum != value))
				{
					this.OnVehicleNumChanging(value);
					this.SendPropertyChanging();
					this._VehicleNum = value;
					this.SendPropertyChanged("VehicleNum");
					this.OnVehicleNumChanged();
				}
			}
		}
		
		[Column(Storage="_DriverCNIC", DbType="NVarChar(50)")]
		public string DriverCNIC
		{
			get
			{
				return this._DriverCNIC;
			}
			set
			{
				if ((this._DriverCNIC != value))
				{
					this.OnDriverCNICChanging(value);
					this.SendPropertyChanging();
					this._DriverCNIC = value;
					this.SendPropertyChanged("DriverCNIC");
					this.OnDriverCNICChanged();
				}
			}
		}
		
		[Column(Storage="_DriverName", DbType="NVarChar(50)")]
		public string DriverName
		{
			get
			{
				return this._DriverName;
			}
			set
			{
				if ((this._DriverName != value))
				{
					this.OnDriverNameChanging(value);
					this.SendPropertyChanging();
					this._DriverName = value;
					this.SendPropertyChanged("DriverName");
					this.OnDriverNameChanged();
				}
			}
		}
		
		[Column(Storage="_DriverDocument", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DriverDocument
		{
			get
			{
				return this._DriverDocument;
			}
			set
			{
				if ((this._DriverDocument != value))
				{
					this.OnDriverDocumentChanging(value);
					this.SendPropertyChanging();
					this._DriverDocument = value;
					this.SendPropertyChanged("DriverDocument");
					this.OnDriverDocumentChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> FWeighmentDate
		{
			get
			{
				return this._FWeighmentDate;
			}
			set
			{
				if ((this._FWeighmentDate != value))
				{
					this.OnFWeighmentDateChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentDate = value;
					this.SendPropertyChanged("FWeighmentDate");
					this.OnFWeighmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> FWeighmentKG
		{
			get
			{
				return this._FWeighmentKG;
			}
			set
			{
				if ((this._FWeighmentKG != value))
				{
					this.OnFWeighmentKGChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentKG = value;
					this.SendPropertyChanged("FWeighmentKG");
					this.OnFWeighmentKGChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentTime", DbType="NVarChar(50)")]
		public string FWeighmentTime
		{
			get
			{
				return this._FWeighmentTime;
			}
			set
			{
				if ((this._FWeighmentTime != value))
				{
					this.OnFWeighmentTimeChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentTime = value;
					this.SendPropertyChanged("FWeighmentTime");
					this.OnFWeighmentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> FWeighmentTon
		{
			get
			{
				return this._FWeighmentTon;
			}
			set
			{
				if ((this._FWeighmentTon != value))
				{
					this.OnFWeighmentTonChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentTon = value;
					this.SendPropertyChanged("FWeighmentTon");
					this.OnFWeighmentTonChanged();
				}
			}
		}
		
		[Column(Storage="_TransportID", DbType="Int")]
		public System.Nullable<int> TransportID
		{
			get
			{
				return this._TransportID;
			}
			set
			{
				if ((this._TransportID != value))
				{
					this.OnTransportIDChanging(value);
					this.SendPropertyChanging();
					this._TransportID = value;
					this.SendPropertyChanged("TransportID");
					this.OnTransportIDChanged();
				}
			}
		}
		
		[Column(Storage="_TransportCode", DbType="NVarChar(50)")]
		public string TransportCode
		{
			get
			{
				return this._TransportCode;
			}
			set
			{
				if ((this._TransportCode != value))
				{
					this.OnTransportCodeChanging(value);
					this.SendPropertyChanging();
					this._TransportCode = value;
					this.SendPropertyChanged("TransportCode");
					this.OnTransportCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransportName", DbType="NVarChar(50)")]
		public string TransportName
		{
			get
			{
				return this._TransportName;
			}
			set
			{
				if ((this._TransportName != value))
				{
					this.OnTransportNameChanging(value);
					this.SendPropertyChanging();
					this._TransportName = value;
					this.SendPropertyChanged("TransportName");
					this.OnTransportNameChanged();
				}
			}
		}
		
		[Column(Storage="_FCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FCreateDate
		{
			get
			{
				return this._FCreateDate;
			}
			set
			{
				if ((this._FCreateDate != value))
				{
					this.OnFCreateDateChanging(value);
					this.SendPropertyChanging();
					this._FCreateDate = value;
					this.SendPropertyChanged("FCreateDate");
					this.OnFCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_FUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FUpdateDate
		{
			get
			{
				return this._FUpdateDate;
			}
			set
			{
				if ((this._FUpdateDate != value))
				{
					this.OnFUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._FUpdateDate = value;
					this.SendPropertyChanged("FUpdateDate");
					this.OnFUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_FCreateBy", DbType="NVarChar(50)")]
		public string FCreateBy
		{
			get
			{
				return this._FCreateBy;
			}
			set
			{
				if ((this._FCreateBy != value))
				{
					this.OnFCreateByChanging(value);
					this.SendPropertyChanging();
					this._FCreateBy = value;
					this.SendPropertyChanged("FCreateBy");
					this.OnFCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_FUpdateBy", DbType="NVarChar(50)")]
		public string FUpdateBy
		{
			get
			{
				return this._FUpdateBy;
			}
			set
			{
				if ((this._FUpdateBy != value))
				{
					this.OnFUpdateByChanging(value);
					this.SendPropertyChanging();
					this._FUpdateBy = value;
					this.SendPropertyChanged("FUpdateBy");
					this.OnFUpdateByChanged();
				}
			}
		}
		
		[Column(Name="flgSecondWeight", Storage="_FlgSecondWeight", DbType="Bit")]
		public System.Nullable<bool> FlgSecondWeight
		{
			get
			{
				return this._FlgSecondWeight;
			}
			set
			{
				if ((this._FlgSecondWeight != value))
				{
					this.OnFlgSecondWeightChanging(value);
					this.SendPropertyChanging();
					this._FlgSecondWeight = value;
					this.SendPropertyChanged("FlgSecondWeight");
					this.OnFlgSecondWeightChanged();
				}
			}
		}
		
		[Column(Storage="_SDocDate", DbType="Date")]
		public System.Nullable<System.DateTime> SDocDate
		{
			get
			{
				return this._SDocDate;
			}
			set
			{
				if ((this._SDocDate != value))
				{
					this.OnSDocDateChanging(value);
					this.SendPropertyChanging();
					this._SDocDate = value;
					this.SendPropertyChanged("SDocDate");
					this.OnSDocDateChanged();
				}
			}
		}
		
		[Column(Storage="_SShift", DbType="Int")]
		public System.Nullable<int> SShift
		{
			get
			{
				return this._SShift;
			}
			set
			{
				if ((this._SShift != value))
				{
					this.OnSShiftChanging(value);
					this.SendPropertyChanging();
					this._SShift = value;
					this.SendPropertyChanged("SShift");
					this.OnSShiftChanged();
				}
			}
		}
		
		[Column(Storage="_STime", DbType="NVarChar(50)")]
		public string STime
		{
			get
			{
				return this._STime;
			}
			set
			{
				if ((this._STime != value))
				{
					this.OnSTimeChanging(value);
					this.SendPropertyChanging();
					this._STime = value;
					this.SendPropertyChanged("STime");
					this.OnSTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> SWeighmentDate
		{
			get
			{
				return this._SWeighmentDate;
			}
			set
			{
				if ((this._SWeighmentDate != value))
				{
					this.OnSWeighmentDateChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentDate = value;
					this.SendPropertyChanged("SWeighmentDate");
					this.OnSWeighmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentTime", DbType="NVarChar(50)")]
		public string SWeighmentTime
		{
			get
			{
				return this._SWeighmentTime;
			}
			set
			{
				if ((this._SWeighmentTime != value))
				{
					this.OnSWeighmentTimeChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentTime = value;
					this.SendPropertyChanged("SWeighmentTime");
					this.OnSWeighmentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SWeighmentKG
		{
			get
			{
				return this._SWeighmentKG;
			}
			set
			{
				if ((this._SWeighmentKG != value))
				{
					this.OnSWeighmentKGChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentKG = value;
					this.SendPropertyChanged("SWeighmentKG");
					this.OnSWeighmentKGChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SWeighmentTon
		{
			get
			{
				return this._SWeighmentTon;
			}
			set
			{
				if ((this._SWeighmentTon != value))
				{
					this.OnSWeighmentTonChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentTon = value;
					this.SendPropertyChanged("SWeighmentTon");
					this.OnSWeighmentTonChanged();
				}
			}
		}
		
		[Column(Storage="_NetWeightKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> NetWeightKG
		{
			get
			{
				return this._NetWeightKG;
			}
			set
			{
				if ((this._NetWeightKG != value))
				{
					this.OnNetWeightKGChanging(value);
					this.SendPropertyChanging();
					this._NetWeightKG = value;
					this.SendPropertyChanged("NetWeightKG");
					this.OnNetWeightKGChanged();
				}
			}
		}
		
		[Column(Storage="_NetWeightTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> NetWeightTon
		{
			get
			{
				return this._NetWeightTon;
			}
			set
			{
				if ((this._NetWeightTon != value))
				{
					this.OnNetWeightTonChanging(value);
					this.SendPropertyChanging();
					this._NetWeightTon = value;
					this.SendPropertyChanged("NetWeightTon");
					this.OnNetWeightTonChanged();
				}
			}
		}
		
		[Column(Storage="_ReturnQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ReturnQuantity
		{
			get
			{
				return this._ReturnQuantity;
			}
			set
			{
				if ((this._ReturnQuantity != value))
				{
					this.OnReturnQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReturnQuantity = value;
					this.SendPropertyChanged("ReturnQuantity");
					this.OnReturnQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_SCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SCreateDate
		{
			get
			{
				return this._SCreateDate;
			}
			set
			{
				if ((this._SCreateDate != value))
				{
					this.OnSCreateDateChanging(value);
					this.SendPropertyChanging();
					this._SCreateDate = value;
					this.SendPropertyChanged("SCreateDate");
					this.OnSCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_SCreateBy", DbType="NVarChar(50)")]
		public string SCreateBy
		{
			get
			{
				return this._SCreateBy;
			}
			set
			{
				if ((this._SCreateBy != value))
				{
					this.OnSCreateByChanging(value);
					this.SendPropertyChanging();
					this._SCreateBy = value;
					this.SendPropertyChanged("SCreateBy");
					this.OnSCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_SUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SUpdateDate
		{
			get
			{
				return this._SUpdateDate;
			}
			set
			{
				if ((this._SUpdateDate != value))
				{
					this.OnSUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._SUpdateDate = value;
					this.SendPropertyChanged("SUpdateDate");
					this.OnSUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_SUpdateBy", DbType="NVarChar(50)")]
		public string SUpdateBy
		{
			get
			{
				return this._SUpdateBy;
			}
			set
			{
				if ((this._SUpdateBy != value))
				{
					this.OnSUpdateByChanging(value);
					this.SendPropertyChanging();
					this._SUpdateBy = value;
					this.SendPropertyChanged("SUpdateBy");
					this.OnSUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_ItemGroupCode", DbType="NVarChar(50)")]
		public string ItemGroupCode
		{
			get
			{
				return this._ItemGroupCode;
			}
			set
			{
				if ((this._ItemGroupCode != value))
				{
					this.OnItemGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupCode = value;
					this.SendPropertyChanged("ItemGroupCode");
					this.OnItemGroupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemGroupName", DbType="NVarChar(50)")]
		public string ItemGroupName
		{
			get
			{
				return this._ItemGroupName;
			}
			set
			{
				if ((this._ItemGroupName != value))
				{
					this.OnItemGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupName = value;
					this.SendPropertyChanged("ItemGroupName");
					this.OnItemGroupNameChanged();
				}
			}
		}
		
		[Column(Storage="_BalanceQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> BalanceQuantity
		{
			get
			{
				return this._BalanceQuantity;
			}
			set
			{
				if ((this._BalanceQuantity != value))
				{
					this.OnBalanceQuantityChanging(value);
					this.SendPropertyChanging();
					this._BalanceQuantity = value;
					this.SendPropertyChanged("BalanceQuantity");
					this.OnBalanceQuantityChanged();
				}
			}
		}
		
		[Column(Name="flgPosted", Storage="_FlgPosted", DbType="Bit")]
		public System.Nullable<bool> FlgPosted
		{
			get
			{
				return this._FlgPosted;
			}
			set
			{
				if ((this._FlgPosted != value))
				{
					this.OnFlgPostedChanging(value);
					this.SendPropertyChanging();
					this._FlgPosted = value;
					this.SendPropertyChanged("FlgPosted");
					this.OnFlgPostedChanged();
				}
			}
		}
		
		[Column(Name="flg1Rpt", Storage="_Flg1Rpt", DbType="Bit")]
		public System.Nullable<bool> Flg1Rpt
		{
			get
			{
				return this._Flg1Rpt;
			}
			set
			{
				if ((this._Flg1Rpt != value))
				{
					this.OnFlg1RptChanging(value);
					this.SendPropertyChanging();
					this._Flg1Rpt = value;
					this.SendPropertyChanged("Flg1Rpt");
					this.OnFlg1RptChanged();
				}
			}
		}
		
		[Column(Name="flg2Rpt", Storage="_Flg2Rpt", DbType="Bit")]
		public System.Nullable<bool> Flg2Rpt
		{
			get
			{
				return this._Flg2Rpt;
			}
			set
			{
				if ((this._Flg2Rpt != value))
				{
					this.OnFlg2RptChanging(value);
					this.SendPropertyChanging();
					this._Flg2Rpt = value;
					this.SendPropertyChanged("Flg2Rpt");
					this.OnFlg2RptChanged();
				}
			}
		}
		
		[Column(Name="flgWBrpt", Storage="_FlgWBrpt", DbType="Bit")]
		public System.Nullable<bool> FlgWBrpt
		{
			get
			{
				return this._FlgWBrpt;
			}
			set
			{
				if ((this._FlgWBrpt != value))
				{
					this.OnFlgWBrptChanging(value);
					this.SendPropertyChanging();
					this._FlgWBrpt = value;
					this.SendPropertyChanged("FlgWBrpt");
					this.OnFlgWBrptChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TrnsRawMaterial")]
	public partial class TrnsRawMaterial : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DocNum;
		
		private System.Nullable<System.DateTime> _FDocDate;
		
		private System.Nullable<int> _FShift;
		
		private string _FTime;
		
		private string _PONum;
		
		private System.Nullable<System.DateTime> _PODate;
		
		private string _VendorCode;
		
		private string _VendorName;
		
		private string _ItemCode;
		
		private string _ItemName;
		
		private System.Nullable<int> _DaySeries;
		
		private System.Nullable<decimal> _OrderQuantity;
		
		private System.Nullable<decimal> _RemainingQuantity;
		
		private System.Nullable<int> _YardId;
		
		private string _VehicleNum;
		
		private string _DriverCNIC;
		
		private string _DriverName;
		
		private string _DriverDocument;
		
		private System.Nullable<System.DateTime> _FWeighmentDate;
		
		private System.Nullable<decimal> _FWeighmentKG;
		
		private string _FWeighmentTime;
		
		private System.Nullable<decimal> _FWeighmentTon;
		
		private System.Nullable<int> _TransportID;
		
		private string _TransportCode;
		
		private string _TransportName;
		
		private System.Nullable<System.DateTime> _FCreateDate;
		
		private System.Nullable<System.DateTime> _FUpdateDate;
		
		private string _FCreateBy;
		
		private string _FUpdateBy;
		
		private System.Nullable<bool> _FlgSecondWeight;
		
		private System.Nullable<System.DateTime> _SDocDate;
		
		private System.Nullable<int> _SShift;
		
		private string _STime;
		
		private System.Nullable<System.DateTime> _SWeighmentDate;
		
		private string _SWeighmentTime;
		
		private System.Nullable<decimal> _SWeighmentKG;
		
		private System.Nullable<decimal> _SWeighmentTon;
		
		private System.Nullable<decimal> _NetWeightKG;
		
		private System.Nullable<decimal> _NetWeightTon;
		
		private System.Nullable<decimal> _ReveivedQuantity;
		
		private System.Nullable<System.DateTime> _SCreateDate;
		
		private string _SCreateBy;
		
		private System.Nullable<System.DateTime> _SUpdateDate;
		
		private string _SUpdateBy;
		
		private string _ItemGroupCode;
		
		private string _ItemGroupName;
		
		private System.Nullable<bool> _FlgPosted;
		
		private System.Nullable<bool> _Flg1Rpt;
		
		private System.Nullable<bool> _Flg2Rpt;
		
		private System.Nullable<bool> _FlgWBrpt;
		
		private string _SNO;
		
		private string _PartyWeight;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocNumChanging(System.Nullable<int> value);
    partial void OnDocNumChanged();
    partial void OnFDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFDocDateChanged();
    partial void OnFShiftChanging(System.Nullable<int> value);
    partial void OnFShiftChanged();
    partial void OnFTimeChanging(string value);
    partial void OnFTimeChanged();
    partial void OnPONumChanging(string value);
    partial void OnPONumChanged();
    partial void OnPODateChanging(System.Nullable<System.DateTime> value);
    partial void OnPODateChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnDaySeriesChanging(System.Nullable<int> value);
    partial void OnDaySeriesChanged();
    partial void OnOrderQuantityChanging(System.Nullable<decimal> value);
    partial void OnOrderQuantityChanged();
    partial void OnRemainingQuantityChanging(System.Nullable<decimal> value);
    partial void OnRemainingQuantityChanged();
    partial void OnYardIdChanging(System.Nullable<int> value);
    partial void OnYardIdChanged();
    partial void OnVehicleNumChanging(string value);
    partial void OnVehicleNumChanged();
    partial void OnDriverCNICChanging(string value);
    partial void OnDriverCNICChanged();
    partial void OnDriverNameChanging(string value);
    partial void OnDriverNameChanged();
    partial void OnDriverDocumentChanging(string value);
    partial void OnDriverDocumentChanged();
    partial void OnFWeighmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFWeighmentDateChanged();
    partial void OnFWeighmentKGChanging(System.Nullable<decimal> value);
    partial void OnFWeighmentKGChanged();
    partial void OnFWeighmentTimeChanging(string value);
    partial void OnFWeighmentTimeChanged();
    partial void OnFWeighmentTonChanging(System.Nullable<decimal> value);
    partial void OnFWeighmentTonChanged();
    partial void OnTransportIDChanging(System.Nullable<int> value);
    partial void OnTransportIDChanged();
    partial void OnTransportCodeChanging(string value);
    partial void OnTransportCodeChanged();
    partial void OnTransportNameChanging(string value);
    partial void OnTransportNameChanged();
    partial void OnFCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFCreateDateChanged();
    partial void OnFUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFUpdateDateChanged();
    partial void OnFCreateByChanging(string value);
    partial void OnFCreateByChanged();
    partial void OnFUpdateByChanging(string value);
    partial void OnFUpdateByChanged();
    partial void OnFlgSecondWeightChanging(System.Nullable<bool> value);
    partial void OnFlgSecondWeightChanged();
    partial void OnSDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSDocDateChanged();
    partial void OnSShiftChanging(System.Nullable<int> value);
    partial void OnSShiftChanged();
    partial void OnSTimeChanging(string value);
    partial void OnSTimeChanged();
    partial void OnSWeighmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSWeighmentDateChanged();
    partial void OnSWeighmentTimeChanging(string value);
    partial void OnSWeighmentTimeChanged();
    partial void OnSWeighmentKGChanging(System.Nullable<decimal> value);
    partial void OnSWeighmentKGChanged();
    partial void OnSWeighmentTonChanging(System.Nullable<decimal> value);
    partial void OnSWeighmentTonChanged();
    partial void OnNetWeightKGChanging(System.Nullable<decimal> value);
    partial void OnNetWeightKGChanged();
    partial void OnNetWeightTonChanging(System.Nullable<decimal> value);
    partial void OnNetWeightTonChanged();
    partial void OnReveivedQuantityChanging(System.Nullable<decimal> value);
    partial void OnReveivedQuantityChanged();
    partial void OnSCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSCreateDateChanged();
    partial void OnSCreateByChanging(string value);
    partial void OnSCreateByChanged();
    partial void OnSUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSUpdateDateChanged();
    partial void OnSUpdateByChanging(string value);
    partial void OnSUpdateByChanged();
    partial void OnItemGroupCodeChanging(string value);
    partial void OnItemGroupCodeChanged();
    partial void OnItemGroupNameChanging(string value);
    partial void OnItemGroupNameChanged();
    partial void OnFlgPostedChanging(System.Nullable<bool> value);
    partial void OnFlgPostedChanged();
    partial void OnFlg1RptChanging(System.Nullable<bool> value);
    partial void OnFlg1RptChanged();
    partial void OnFlg2RptChanging(System.Nullable<bool> value);
    partial void OnFlg2RptChanged();
    partial void OnFlgWBrptChanging(System.Nullable<bool> value);
    partial void OnFlgWBrptChanged();
    partial void OnSNOChanging(string value);
    partial void OnSNOChanged();
    partial void OnPartyWeightChanging(string value);
    partial void OnPartyWeightChanged();
    #endregion
		
		public TrnsRawMaterial()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocNum", DbType="Int")]
		public System.Nullable<int> DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[Column(Storage="_FDocDate", DbType="Date")]
		public System.Nullable<System.DateTime> FDocDate
		{
			get
			{
				return this._FDocDate;
			}
			set
			{
				if ((this._FDocDate != value))
				{
					this.OnFDocDateChanging(value);
					this.SendPropertyChanging();
					this._FDocDate = value;
					this.SendPropertyChanged("FDocDate");
					this.OnFDocDateChanged();
				}
			}
		}
		
		[Column(Storage="_FShift", DbType="Int")]
		public System.Nullable<int> FShift
		{
			get
			{
				return this._FShift;
			}
			set
			{
				if ((this._FShift != value))
				{
					this.OnFShiftChanging(value);
					this.SendPropertyChanging();
					this._FShift = value;
					this.SendPropertyChanged("FShift");
					this.OnFShiftChanged();
				}
			}
		}
		
		[Column(Storage="_FTime", DbType="NVarChar(50)")]
		public string FTime
		{
			get
			{
				return this._FTime;
			}
			set
			{
				if ((this._FTime != value))
				{
					this.OnFTimeChanging(value);
					this.SendPropertyChanging();
					this._FTime = value;
					this.SendPropertyChanged("FTime");
					this.OnFTimeChanged();
				}
			}
		}
		
		[Column(Storage="_PONum", DbType="NVarChar(50)")]
		public string PONum
		{
			get
			{
				return this._PONum;
			}
			set
			{
				if ((this._PONum != value))
				{
					this.OnPONumChanging(value);
					this.SendPropertyChanging();
					this._PONum = value;
					this.SendPropertyChanged("PONum");
					this.OnPONumChanged();
				}
			}
		}
		
		[Column(Storage="_PODate", DbType="DateTime")]
		public System.Nullable<System.DateTime> PODate
		{
			get
			{
				return this._PODate;
			}
			set
			{
				if ((this._PODate != value))
				{
					this.OnPODateChanging(value);
					this.SendPropertyChanging();
					this._PODate = value;
					this.SendPropertyChanged("PODate");
					this.OnPODateChanged();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="NVarChar(50)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_VendorName", DbType="NVarChar(100)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemName", DbType="NVarChar(100)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[Column(Storage="_DaySeries", DbType="Int")]
		public System.Nullable<int> DaySeries
		{
			get
			{
				return this._DaySeries;
			}
			set
			{
				if ((this._DaySeries != value))
				{
					this.OnDaySeriesChanging(value);
					this.SendPropertyChanging();
					this._DaySeries = value;
					this.SendPropertyChanged("DaySeries");
					this.OnDaySeriesChanged();
				}
			}
		}
		
		[Column(Storage="_OrderQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> OrderQuantity
		{
			get
			{
				return this._OrderQuantity;
			}
			set
			{
				if ((this._OrderQuantity != value))
				{
					this.OnOrderQuantityChanging(value);
					this.SendPropertyChanging();
					this._OrderQuantity = value;
					this.SendPropertyChanged("OrderQuantity");
					this.OnOrderQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_RemainingQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> RemainingQuantity
		{
			get
			{
				return this._RemainingQuantity;
			}
			set
			{
				if ((this._RemainingQuantity != value))
				{
					this.OnRemainingQuantityChanging(value);
					this.SendPropertyChanging();
					this._RemainingQuantity = value;
					this.SendPropertyChanged("RemainingQuantity");
					this.OnRemainingQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_YardId", DbType="Int")]
		public System.Nullable<int> YardId
		{
			get
			{
				return this._YardId;
			}
			set
			{
				if ((this._YardId != value))
				{
					this.OnYardIdChanging(value);
					this.SendPropertyChanging();
					this._YardId = value;
					this.SendPropertyChanged("YardId");
					this.OnYardIdChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleNum", DbType="NVarChar(50)")]
		public string VehicleNum
		{
			get
			{
				return this._VehicleNum;
			}
			set
			{
				if ((this._VehicleNum != value))
				{
					this.OnVehicleNumChanging(value);
					this.SendPropertyChanging();
					this._VehicleNum = value;
					this.SendPropertyChanged("VehicleNum");
					this.OnVehicleNumChanged();
				}
			}
		}
		
		[Column(Storage="_DriverCNIC", DbType="NVarChar(50)")]
		public string DriverCNIC
		{
			get
			{
				return this._DriverCNIC;
			}
			set
			{
				if ((this._DriverCNIC != value))
				{
					this.OnDriverCNICChanging(value);
					this.SendPropertyChanging();
					this._DriverCNIC = value;
					this.SendPropertyChanged("DriverCNIC");
					this.OnDriverCNICChanged();
				}
			}
		}
		
		[Column(Storage="_DriverName", DbType="NVarChar(100)")]
		public string DriverName
		{
			get
			{
				return this._DriverName;
			}
			set
			{
				if ((this._DriverName != value))
				{
					this.OnDriverNameChanging(value);
					this.SendPropertyChanging();
					this._DriverName = value;
					this.SendPropertyChanged("DriverName");
					this.OnDriverNameChanged();
				}
			}
		}
		
		[Column(Storage="_DriverDocument", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DriverDocument
		{
			get
			{
				return this._DriverDocument;
			}
			set
			{
				if ((this._DriverDocument != value))
				{
					this.OnDriverDocumentChanging(value);
					this.SendPropertyChanging();
					this._DriverDocument = value;
					this.SendPropertyChanged("DriverDocument");
					this.OnDriverDocumentChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> FWeighmentDate
		{
			get
			{
				return this._FWeighmentDate;
			}
			set
			{
				if ((this._FWeighmentDate != value))
				{
					this.OnFWeighmentDateChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentDate = value;
					this.SendPropertyChanged("FWeighmentDate");
					this.OnFWeighmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> FWeighmentKG
		{
			get
			{
				return this._FWeighmentKG;
			}
			set
			{
				if ((this._FWeighmentKG != value))
				{
					this.OnFWeighmentKGChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentKG = value;
					this.SendPropertyChanged("FWeighmentKG");
					this.OnFWeighmentKGChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentTime", DbType="NVarChar(50)")]
		public string FWeighmentTime
		{
			get
			{
				return this._FWeighmentTime;
			}
			set
			{
				if ((this._FWeighmentTime != value))
				{
					this.OnFWeighmentTimeChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentTime = value;
					this.SendPropertyChanged("FWeighmentTime");
					this.OnFWeighmentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> FWeighmentTon
		{
			get
			{
				return this._FWeighmentTon;
			}
			set
			{
				if ((this._FWeighmentTon != value))
				{
					this.OnFWeighmentTonChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentTon = value;
					this.SendPropertyChanged("FWeighmentTon");
					this.OnFWeighmentTonChanged();
				}
			}
		}
		
		[Column(Storage="_TransportID", DbType="Int")]
		public System.Nullable<int> TransportID
		{
			get
			{
				return this._TransportID;
			}
			set
			{
				if ((this._TransportID != value))
				{
					this.OnTransportIDChanging(value);
					this.SendPropertyChanging();
					this._TransportID = value;
					this.SendPropertyChanged("TransportID");
					this.OnTransportIDChanged();
				}
			}
		}
		
		[Column(Storage="_TransportCode", DbType="NVarChar(50)")]
		public string TransportCode
		{
			get
			{
				return this._TransportCode;
			}
			set
			{
				if ((this._TransportCode != value))
				{
					this.OnTransportCodeChanging(value);
					this.SendPropertyChanging();
					this._TransportCode = value;
					this.SendPropertyChanged("TransportCode");
					this.OnTransportCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransportName", DbType="NVarChar(50)")]
		public string TransportName
		{
			get
			{
				return this._TransportName;
			}
			set
			{
				if ((this._TransportName != value))
				{
					this.OnTransportNameChanging(value);
					this.SendPropertyChanging();
					this._TransportName = value;
					this.SendPropertyChanged("TransportName");
					this.OnTransportNameChanged();
				}
			}
		}
		
		[Column(Storage="_FCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FCreateDate
		{
			get
			{
				return this._FCreateDate;
			}
			set
			{
				if ((this._FCreateDate != value))
				{
					this.OnFCreateDateChanging(value);
					this.SendPropertyChanging();
					this._FCreateDate = value;
					this.SendPropertyChanged("FCreateDate");
					this.OnFCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_FUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FUpdateDate
		{
			get
			{
				return this._FUpdateDate;
			}
			set
			{
				if ((this._FUpdateDate != value))
				{
					this.OnFUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._FUpdateDate = value;
					this.SendPropertyChanged("FUpdateDate");
					this.OnFUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_FCreateBy", DbType="NVarChar(50)")]
		public string FCreateBy
		{
			get
			{
				return this._FCreateBy;
			}
			set
			{
				if ((this._FCreateBy != value))
				{
					this.OnFCreateByChanging(value);
					this.SendPropertyChanging();
					this._FCreateBy = value;
					this.SendPropertyChanged("FCreateBy");
					this.OnFCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_FUpdateBy", DbType="NVarChar(50)")]
		public string FUpdateBy
		{
			get
			{
				return this._FUpdateBy;
			}
			set
			{
				if ((this._FUpdateBy != value))
				{
					this.OnFUpdateByChanging(value);
					this.SendPropertyChanging();
					this._FUpdateBy = value;
					this.SendPropertyChanged("FUpdateBy");
					this.OnFUpdateByChanged();
				}
			}
		}
		
		[Column(Name="flgSecondWeight", Storage="_FlgSecondWeight", DbType="Bit")]
		public System.Nullable<bool> FlgSecondWeight
		{
			get
			{
				return this._FlgSecondWeight;
			}
			set
			{
				if ((this._FlgSecondWeight != value))
				{
					this.OnFlgSecondWeightChanging(value);
					this.SendPropertyChanging();
					this._FlgSecondWeight = value;
					this.SendPropertyChanged("FlgSecondWeight");
					this.OnFlgSecondWeightChanged();
				}
			}
		}
		
		[Column(Storage="_SDocDate", DbType="Date")]
		public System.Nullable<System.DateTime> SDocDate
		{
			get
			{
				return this._SDocDate;
			}
			set
			{
				if ((this._SDocDate != value))
				{
					this.OnSDocDateChanging(value);
					this.SendPropertyChanging();
					this._SDocDate = value;
					this.SendPropertyChanged("SDocDate");
					this.OnSDocDateChanged();
				}
			}
		}
		
		[Column(Storage="_SShift", DbType="Int")]
		public System.Nullable<int> SShift
		{
			get
			{
				return this._SShift;
			}
			set
			{
				if ((this._SShift != value))
				{
					this.OnSShiftChanging(value);
					this.SendPropertyChanging();
					this._SShift = value;
					this.SendPropertyChanged("SShift");
					this.OnSShiftChanged();
				}
			}
		}
		
		[Column(Storage="_STime", DbType="NVarChar(50)")]
		public string STime
		{
			get
			{
				return this._STime;
			}
			set
			{
				if ((this._STime != value))
				{
					this.OnSTimeChanging(value);
					this.SendPropertyChanging();
					this._STime = value;
					this.SendPropertyChanged("STime");
					this.OnSTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> SWeighmentDate
		{
			get
			{
				return this._SWeighmentDate;
			}
			set
			{
				if ((this._SWeighmentDate != value))
				{
					this.OnSWeighmentDateChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentDate = value;
					this.SendPropertyChanged("SWeighmentDate");
					this.OnSWeighmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentTime", DbType="NVarChar(50)")]
		public string SWeighmentTime
		{
			get
			{
				return this._SWeighmentTime;
			}
			set
			{
				if ((this._SWeighmentTime != value))
				{
					this.OnSWeighmentTimeChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentTime = value;
					this.SendPropertyChanged("SWeighmentTime");
					this.OnSWeighmentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SWeighmentKG
		{
			get
			{
				return this._SWeighmentKG;
			}
			set
			{
				if ((this._SWeighmentKG != value))
				{
					this.OnSWeighmentKGChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentKG = value;
					this.SendPropertyChanged("SWeighmentKG");
					this.OnSWeighmentKGChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SWeighmentTon
		{
			get
			{
				return this._SWeighmentTon;
			}
			set
			{
				if ((this._SWeighmentTon != value))
				{
					this.OnSWeighmentTonChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentTon = value;
					this.SendPropertyChanged("SWeighmentTon");
					this.OnSWeighmentTonChanged();
				}
			}
		}
		
		[Column(Storage="_NetWeightKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> NetWeightKG
		{
			get
			{
				return this._NetWeightKG;
			}
			set
			{
				if ((this._NetWeightKG != value))
				{
					this.OnNetWeightKGChanging(value);
					this.SendPropertyChanging();
					this._NetWeightKG = value;
					this.SendPropertyChanged("NetWeightKG");
					this.OnNetWeightKGChanged();
				}
			}
		}
		
		[Column(Storage="_NetWeightTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> NetWeightTon
		{
			get
			{
				return this._NetWeightTon;
			}
			set
			{
				if ((this._NetWeightTon != value))
				{
					this.OnNetWeightTonChanging(value);
					this.SendPropertyChanging();
					this._NetWeightTon = value;
					this.SendPropertyChanged("NetWeightTon");
					this.OnNetWeightTonChanged();
				}
			}
		}
		
		[Column(Storage="_ReveivedQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ReveivedQuantity
		{
			get
			{
				return this._ReveivedQuantity;
			}
			set
			{
				if ((this._ReveivedQuantity != value))
				{
					this.OnReveivedQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReveivedQuantity = value;
					this.SendPropertyChanged("ReveivedQuantity");
					this.OnReveivedQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_SCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SCreateDate
		{
			get
			{
				return this._SCreateDate;
			}
			set
			{
				if ((this._SCreateDate != value))
				{
					this.OnSCreateDateChanging(value);
					this.SendPropertyChanging();
					this._SCreateDate = value;
					this.SendPropertyChanged("SCreateDate");
					this.OnSCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_SCreateBy", DbType="NVarChar(50)")]
		public string SCreateBy
		{
			get
			{
				return this._SCreateBy;
			}
			set
			{
				if ((this._SCreateBy != value))
				{
					this.OnSCreateByChanging(value);
					this.SendPropertyChanging();
					this._SCreateBy = value;
					this.SendPropertyChanged("SCreateBy");
					this.OnSCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_SUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SUpdateDate
		{
			get
			{
				return this._SUpdateDate;
			}
			set
			{
				if ((this._SUpdateDate != value))
				{
					this.OnSUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._SUpdateDate = value;
					this.SendPropertyChanged("SUpdateDate");
					this.OnSUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_SUpdateBy", DbType="NVarChar(50)")]
		public string SUpdateBy
		{
			get
			{
				return this._SUpdateBy;
			}
			set
			{
				if ((this._SUpdateBy != value))
				{
					this.OnSUpdateByChanging(value);
					this.SendPropertyChanging();
					this._SUpdateBy = value;
					this.SendPropertyChanged("SUpdateBy");
					this.OnSUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_ItemGroupCode", DbType="NVarChar(100)")]
		public string ItemGroupCode
		{
			get
			{
				return this._ItemGroupCode;
			}
			set
			{
				if ((this._ItemGroupCode != value))
				{
					this.OnItemGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupCode = value;
					this.SendPropertyChanged("ItemGroupCode");
					this.OnItemGroupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemGroupName", DbType="NVarChar(100)")]
		public string ItemGroupName
		{
			get
			{
				return this._ItemGroupName;
			}
			set
			{
				if ((this._ItemGroupName != value))
				{
					this.OnItemGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupName = value;
					this.SendPropertyChanged("ItemGroupName");
					this.OnItemGroupNameChanged();
				}
			}
		}
		
		[Column(Name="flgPosted", Storage="_FlgPosted", DbType="Bit")]
		public System.Nullable<bool> FlgPosted
		{
			get
			{
				return this._FlgPosted;
			}
			set
			{
				if ((this._FlgPosted != value))
				{
					this.OnFlgPostedChanging(value);
					this.SendPropertyChanging();
					this._FlgPosted = value;
					this.SendPropertyChanged("FlgPosted");
					this.OnFlgPostedChanged();
				}
			}
		}
		
		[Column(Name="flg1Rpt", Storage="_Flg1Rpt", DbType="Bit")]
		public System.Nullable<bool> Flg1Rpt
		{
			get
			{
				return this._Flg1Rpt;
			}
			set
			{
				if ((this._Flg1Rpt != value))
				{
					this.OnFlg1RptChanging(value);
					this.SendPropertyChanging();
					this._Flg1Rpt = value;
					this.SendPropertyChanged("Flg1Rpt");
					this.OnFlg1RptChanged();
				}
			}
		}
		
		[Column(Name="flg2Rpt", Storage="_Flg2Rpt", DbType="Bit")]
		public System.Nullable<bool> Flg2Rpt
		{
			get
			{
				return this._Flg2Rpt;
			}
			set
			{
				if ((this._Flg2Rpt != value))
				{
					this.OnFlg2RptChanging(value);
					this.SendPropertyChanging();
					this._Flg2Rpt = value;
					this.SendPropertyChanged("Flg2Rpt");
					this.OnFlg2RptChanged();
				}
			}
		}
		
		[Column(Name="flgWBrpt", Storage="_FlgWBrpt", DbType="Bit")]
		public System.Nullable<bool> FlgWBrpt
		{
			get
			{
				return this._FlgWBrpt;
			}
			set
			{
				if ((this._FlgWBrpt != value))
				{
					this.OnFlgWBrptChanging(value);
					this.SendPropertyChanging();
					this._FlgWBrpt = value;
					this.SendPropertyChanged("FlgWBrpt");
					this.OnFlgWBrptChanged();
				}
			}
		}
		
		[Column(Storage="_SNO", DbType="NVarChar(50)")]
		public string SNO
		{
			get
			{
				return this._SNO;
			}
			set
			{
				if ((this._SNO != value))
				{
					this.OnSNOChanging(value);
					this.SendPropertyChanging();
					this._SNO = value;
					this.SendPropertyChanged("SNO");
					this.OnSNOChanged();
				}
			}
		}
		
		[Column(Storage="_PartyWeight", DbType="NVarChar(50)")]
		public string PartyWeight
		{
			get
			{
				return this._PartyWeight;
			}
			set
			{
				if ((this._PartyWeight != value))
				{
					this.OnPartyWeightChanging(value);
					this.SendPropertyChanging();
					this._PartyWeight = value;
					this.SendPropertyChanged("PartyWeight");
					this.OnPartyWeightChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[Table(Name="dbo.TrnsRawMaterialReturn")]
	public partial class TrnsRawMaterialReturn : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _ID;
		
		private System.Nullable<int> _DocNum;
		
		private System.Nullable<System.DateTime> _FDocDate;
		
		private System.Nullable<int> _FShift;
		
		private string _FTime;
		
		private string _GRPONum;
		
		private System.Nullable<System.DateTime> _GRPODate;
		
		private string _VendorCode;
		
		private string _VendorName;
		
		private string _ItemCode;
		
		private string _ItemName;
		
		private System.Nullable<int> _DaySeries;
		
		private System.Nullable<decimal> _GRPOQuantity;
		
		private string _VehicleNum;
		
		private string _DriverCNIC;
		
		private string _DriverName;
		
		private string _DriverPath;
		
		private System.Nullable<System.DateTime> _FWeighmentDate;
		
		private System.Nullable<decimal> _FWeighmentKG;
		
		private string _FWeighmentTime;
		
		private System.Nullable<decimal> _FWeighmentTon;
		
		private System.Nullable<int> _TransportID;
		
		private string _TransportCode;
		
		private string _TransportName;
		
		private System.Nullable<System.DateTime> _FCreateDate;
		
		private System.Nullable<System.DateTime> _FUpdateDate;
		
		private string _FCreateBy;
		
		private string _FUpdateBy;
		
		private System.Nullable<bool> _FlgSecondWeight;
		
		private System.Nullable<System.DateTime> _SDocDate;
		
		private System.Nullable<int> _SShift;
		
		private string _STime;
		
		private System.Nullable<System.DateTime> _SWeighmentDate;
		
		private string _SWeighmentTime;
		
		private System.Nullable<decimal> _SWeighmentKG;
		
		private System.Nullable<decimal> _SWeighmentTon;
		
		private System.Nullable<decimal> _NetWeightKG;
		
		private System.Nullable<decimal> _NetWeightTon;
		
		private System.Nullable<decimal> _ReturnQuantity;
		
		private System.Nullable<System.DateTime> _SCreateDate;
		
		private string _SCreateBy;
		
		private System.Nullable<System.DateTime> _SUpdateDate;
		
		private string _SUpdateBy;
		
		private string _ItemGroupCode;
		
		private string _ItemGroupName;
		
		private System.Nullable<decimal> _RemainingQuantity;
		
		private System.Nullable<int> _YardId;
		
		private System.Nullable<bool> _FlgPosted;
		
		private System.Nullable<bool> _Flg1Rpt;
		
		private System.Nullable<bool> _Flg2Rpt;
		
		private System.Nullable<bool> _FlgWBrpt;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDChanging(int value);
    partial void OnIDChanged();
    partial void OnDocNumChanging(System.Nullable<int> value);
    partial void OnDocNumChanged();
    partial void OnFDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFDocDateChanged();
    partial void OnFShiftChanging(System.Nullable<int> value);
    partial void OnFShiftChanged();
    partial void OnFTimeChanging(string value);
    partial void OnFTimeChanged();
    partial void OnGRPONumChanging(string value);
    partial void OnGRPONumChanged();
    partial void OnGRPODateChanging(System.Nullable<System.DateTime> value);
    partial void OnGRPODateChanged();
    partial void OnVendorCodeChanging(string value);
    partial void OnVendorCodeChanged();
    partial void OnVendorNameChanging(string value);
    partial void OnVendorNameChanged();
    partial void OnItemCodeChanging(string value);
    partial void OnItemCodeChanged();
    partial void OnItemNameChanging(string value);
    partial void OnItemNameChanged();
    partial void OnDaySeriesChanging(System.Nullable<int> value);
    partial void OnDaySeriesChanged();
    partial void OnGRPOQuantityChanging(System.Nullable<decimal> value);
    partial void OnGRPOQuantityChanged();
    partial void OnVehicleNumChanging(string value);
    partial void OnVehicleNumChanged();
    partial void OnDriverCNICChanging(string value);
    partial void OnDriverCNICChanged();
    partial void OnDriverNameChanging(string value);
    partial void OnDriverNameChanged();
    partial void OnDriverPathChanging(string value);
    partial void OnDriverPathChanged();
    partial void OnFWeighmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFWeighmentDateChanged();
    partial void OnFWeighmentKGChanging(System.Nullable<decimal> value);
    partial void OnFWeighmentKGChanged();
    partial void OnFWeighmentTimeChanging(string value);
    partial void OnFWeighmentTimeChanged();
    partial void OnFWeighmentTonChanging(System.Nullable<decimal> value);
    partial void OnFWeighmentTonChanged();
    partial void OnTransportIDChanging(System.Nullable<int> value);
    partial void OnTransportIDChanged();
    partial void OnTransportCodeChanging(string value);
    partial void OnTransportCodeChanged();
    partial void OnTransportNameChanging(string value);
    partial void OnTransportNameChanged();
    partial void OnFCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFCreateDateChanged();
    partial void OnFUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnFUpdateDateChanged();
    partial void OnFCreateByChanging(string value);
    partial void OnFCreateByChanged();
    partial void OnFUpdateByChanging(string value);
    partial void OnFUpdateByChanged();
    partial void OnFlgSecondWeightChanging(System.Nullable<bool> value);
    partial void OnFlgSecondWeightChanged();
    partial void OnSDocDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSDocDateChanged();
    partial void OnSShiftChanging(System.Nullable<int> value);
    partial void OnSShiftChanged();
    partial void OnSTimeChanging(string value);
    partial void OnSTimeChanged();
    partial void OnSWeighmentDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSWeighmentDateChanged();
    partial void OnSWeighmentTimeChanging(string value);
    partial void OnSWeighmentTimeChanged();
    partial void OnSWeighmentKGChanging(System.Nullable<decimal> value);
    partial void OnSWeighmentKGChanged();
    partial void OnSWeighmentTonChanging(System.Nullable<decimal> value);
    partial void OnSWeighmentTonChanged();
    partial void OnNetWeightKGChanging(System.Nullable<decimal> value);
    partial void OnNetWeightKGChanged();
    partial void OnNetWeightTonChanging(System.Nullable<decimal> value);
    partial void OnNetWeightTonChanged();
    partial void OnReturnQuantityChanging(System.Nullable<decimal> value);
    partial void OnReturnQuantityChanged();
    partial void OnSCreateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSCreateDateChanged();
    partial void OnSCreateByChanging(string value);
    partial void OnSCreateByChanged();
    partial void OnSUpdateDateChanging(System.Nullable<System.DateTime> value);
    partial void OnSUpdateDateChanged();
    partial void OnSUpdateByChanging(string value);
    partial void OnSUpdateByChanged();
    partial void OnItemGroupCodeChanging(string value);
    partial void OnItemGroupCodeChanged();
    partial void OnItemGroupNameChanging(string value);
    partial void OnItemGroupNameChanged();
    partial void OnRemainingQuantityChanging(System.Nullable<decimal> value);
    partial void OnRemainingQuantityChanged();
    partial void OnYardIdChanging(System.Nullable<int> value);
    partial void OnYardIdChanged();
    partial void OnFlgPostedChanging(System.Nullable<bool> value);
    partial void OnFlgPostedChanged();
    partial void OnFlg1RptChanging(System.Nullable<bool> value);
    partial void OnFlg1RptChanged();
    partial void OnFlg2RptChanging(System.Nullable<bool> value);
    partial void OnFlg2RptChanged();
    partial void OnFlgWBrptChanging(System.Nullable<bool> value);
    partial void OnFlgWBrptChanged();
    #endregion
		
		public TrnsRawMaterialReturn()
		{
			OnCreated();
		}
		
		[Column(Storage="_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int ID
		{
			get
			{
				return this._ID;
			}
			set
			{
				if ((this._ID != value))
				{
					this.OnIDChanging(value);
					this.SendPropertyChanging();
					this._ID = value;
					this.SendPropertyChanged("ID");
					this.OnIDChanged();
				}
			}
		}
		
		[Column(Storage="_DocNum", DbType="Int")]
		public System.Nullable<int> DocNum
		{
			get
			{
				return this._DocNum;
			}
			set
			{
				if ((this._DocNum != value))
				{
					this.OnDocNumChanging(value);
					this.SendPropertyChanging();
					this._DocNum = value;
					this.SendPropertyChanged("DocNum");
					this.OnDocNumChanged();
				}
			}
		}
		
		[Column(Storage="_FDocDate", DbType="Date")]
		public System.Nullable<System.DateTime> FDocDate
		{
			get
			{
				return this._FDocDate;
			}
			set
			{
				if ((this._FDocDate != value))
				{
					this.OnFDocDateChanging(value);
					this.SendPropertyChanging();
					this._FDocDate = value;
					this.SendPropertyChanged("FDocDate");
					this.OnFDocDateChanged();
				}
			}
		}
		
		[Column(Storage="_FShift", DbType="Int")]
		public System.Nullable<int> FShift
		{
			get
			{
				return this._FShift;
			}
			set
			{
				if ((this._FShift != value))
				{
					this.OnFShiftChanging(value);
					this.SendPropertyChanging();
					this._FShift = value;
					this.SendPropertyChanged("FShift");
					this.OnFShiftChanged();
				}
			}
		}
		
		[Column(Storage="_FTime", DbType="NVarChar(50)")]
		public string FTime
		{
			get
			{
				return this._FTime;
			}
			set
			{
				if ((this._FTime != value))
				{
					this.OnFTimeChanging(value);
					this.SendPropertyChanging();
					this._FTime = value;
					this.SendPropertyChanged("FTime");
					this.OnFTimeChanged();
				}
			}
		}
		
		[Column(Storage="_GRPONum", DbType="NVarChar(50)")]
		public string GRPONum
		{
			get
			{
				return this._GRPONum;
			}
			set
			{
				if ((this._GRPONum != value))
				{
					this.OnGRPONumChanging(value);
					this.SendPropertyChanging();
					this._GRPONum = value;
					this.SendPropertyChanged("GRPONum");
					this.OnGRPONumChanged();
				}
			}
		}
		
		[Column(Storage="_GRPODate", DbType="DateTime")]
		public System.Nullable<System.DateTime> GRPODate
		{
			get
			{
				return this._GRPODate;
			}
			set
			{
				if ((this._GRPODate != value))
				{
					this.OnGRPODateChanging(value);
					this.SendPropertyChanging();
					this._GRPODate = value;
					this.SendPropertyChanged("GRPODate");
					this.OnGRPODateChanged();
				}
			}
		}
		
		[Column(Storage="_VendorCode", DbType="NVarChar(50)")]
		public string VendorCode
		{
			get
			{
				return this._VendorCode;
			}
			set
			{
				if ((this._VendorCode != value))
				{
					this.OnVendorCodeChanging(value);
					this.SendPropertyChanging();
					this._VendorCode = value;
					this.SendPropertyChanged("VendorCode");
					this.OnVendorCodeChanged();
				}
			}
		}
		
		[Column(Storage="_VendorName", DbType="NVarChar(100)")]
		public string VendorName
		{
			get
			{
				return this._VendorName;
			}
			set
			{
				if ((this._VendorName != value))
				{
					this.OnVendorNameChanging(value);
					this.SendPropertyChanging();
					this._VendorName = value;
					this.SendPropertyChanged("VendorName");
					this.OnVendorNameChanged();
				}
			}
		}
		
		[Column(Storage="_ItemCode", DbType="NVarChar(50)")]
		public string ItemCode
		{
			get
			{
				return this._ItemCode;
			}
			set
			{
				if ((this._ItemCode != value))
				{
					this.OnItemCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemCode = value;
					this.SendPropertyChanged("ItemCode");
					this.OnItemCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemName", DbType="NVarChar(100)")]
		public string ItemName
		{
			get
			{
				return this._ItemName;
			}
			set
			{
				if ((this._ItemName != value))
				{
					this.OnItemNameChanging(value);
					this.SendPropertyChanging();
					this._ItemName = value;
					this.SendPropertyChanged("ItemName");
					this.OnItemNameChanged();
				}
			}
		}
		
		[Column(Storage="_DaySeries", DbType="Int")]
		public System.Nullable<int> DaySeries
		{
			get
			{
				return this._DaySeries;
			}
			set
			{
				if ((this._DaySeries != value))
				{
					this.OnDaySeriesChanging(value);
					this.SendPropertyChanging();
					this._DaySeries = value;
					this.SendPropertyChanged("DaySeries");
					this.OnDaySeriesChanged();
				}
			}
		}
		
		[Column(Storage="_GRPOQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> GRPOQuantity
		{
			get
			{
				return this._GRPOQuantity;
			}
			set
			{
				if ((this._GRPOQuantity != value))
				{
					this.OnGRPOQuantityChanging(value);
					this.SendPropertyChanging();
					this._GRPOQuantity = value;
					this.SendPropertyChanged("GRPOQuantity");
					this.OnGRPOQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_VehicleNum", DbType="NVarChar(50)")]
		public string VehicleNum
		{
			get
			{
				return this._VehicleNum;
			}
			set
			{
				if ((this._VehicleNum != value))
				{
					this.OnVehicleNumChanging(value);
					this.SendPropertyChanging();
					this._VehicleNum = value;
					this.SendPropertyChanged("VehicleNum");
					this.OnVehicleNumChanged();
				}
			}
		}
		
		[Column(Storage="_DriverCNIC", DbType="NVarChar(50)")]
		public string DriverCNIC
		{
			get
			{
				return this._DriverCNIC;
			}
			set
			{
				if ((this._DriverCNIC != value))
				{
					this.OnDriverCNICChanging(value);
					this.SendPropertyChanging();
					this._DriverCNIC = value;
					this.SendPropertyChanged("DriverCNIC");
					this.OnDriverCNICChanged();
				}
			}
		}
		
		[Column(Storage="_DriverName", DbType="NVarChar(50)")]
		public string DriverName
		{
			get
			{
				return this._DriverName;
			}
			set
			{
				if ((this._DriverName != value))
				{
					this.OnDriverNameChanging(value);
					this.SendPropertyChanging();
					this._DriverName = value;
					this.SendPropertyChanged("DriverName");
					this.OnDriverNameChanged();
				}
			}
		}
		
		[Column(Storage="_DriverPath", DbType="NVarChar(MAX)", UpdateCheck=UpdateCheck.Never)]
		public string DriverPath
		{
			get
			{
				return this._DriverPath;
			}
			set
			{
				if ((this._DriverPath != value))
				{
					this.OnDriverPathChanging(value);
					this.SendPropertyChanging();
					this._DriverPath = value;
					this.SendPropertyChanged("DriverPath");
					this.OnDriverPathChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> FWeighmentDate
		{
			get
			{
				return this._FWeighmentDate;
			}
			set
			{
				if ((this._FWeighmentDate != value))
				{
					this.OnFWeighmentDateChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentDate = value;
					this.SendPropertyChanged("FWeighmentDate");
					this.OnFWeighmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> FWeighmentKG
		{
			get
			{
				return this._FWeighmentKG;
			}
			set
			{
				if ((this._FWeighmentKG != value))
				{
					this.OnFWeighmentKGChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentKG = value;
					this.SendPropertyChanged("FWeighmentKG");
					this.OnFWeighmentKGChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentTime", DbType="NVarChar(50)")]
		public string FWeighmentTime
		{
			get
			{
				return this._FWeighmentTime;
			}
			set
			{
				if ((this._FWeighmentTime != value))
				{
					this.OnFWeighmentTimeChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentTime = value;
					this.SendPropertyChanged("FWeighmentTime");
					this.OnFWeighmentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_FWeighmentTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> FWeighmentTon
		{
			get
			{
				return this._FWeighmentTon;
			}
			set
			{
				if ((this._FWeighmentTon != value))
				{
					this.OnFWeighmentTonChanging(value);
					this.SendPropertyChanging();
					this._FWeighmentTon = value;
					this.SendPropertyChanged("FWeighmentTon");
					this.OnFWeighmentTonChanged();
				}
			}
		}
		
		[Column(Storage="_TransportID", DbType="Int")]
		public System.Nullable<int> TransportID
		{
			get
			{
				return this._TransportID;
			}
			set
			{
				if ((this._TransportID != value))
				{
					this.OnTransportIDChanging(value);
					this.SendPropertyChanging();
					this._TransportID = value;
					this.SendPropertyChanged("TransportID");
					this.OnTransportIDChanged();
				}
			}
		}
		
		[Column(Storage="_TransportCode", DbType="NVarChar(50)")]
		public string TransportCode
		{
			get
			{
				return this._TransportCode;
			}
			set
			{
				if ((this._TransportCode != value))
				{
					this.OnTransportCodeChanging(value);
					this.SendPropertyChanging();
					this._TransportCode = value;
					this.SendPropertyChanged("TransportCode");
					this.OnTransportCodeChanged();
				}
			}
		}
		
		[Column(Storage="_TransportName", DbType="NVarChar(50)")]
		public string TransportName
		{
			get
			{
				return this._TransportName;
			}
			set
			{
				if ((this._TransportName != value))
				{
					this.OnTransportNameChanging(value);
					this.SendPropertyChanging();
					this._TransportName = value;
					this.SendPropertyChanged("TransportName");
					this.OnTransportNameChanged();
				}
			}
		}
		
		[Column(Storage="_FCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FCreateDate
		{
			get
			{
				return this._FCreateDate;
			}
			set
			{
				if ((this._FCreateDate != value))
				{
					this.OnFCreateDateChanging(value);
					this.SendPropertyChanging();
					this._FCreateDate = value;
					this.SendPropertyChanged("FCreateDate");
					this.OnFCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_FUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> FUpdateDate
		{
			get
			{
				return this._FUpdateDate;
			}
			set
			{
				if ((this._FUpdateDate != value))
				{
					this.OnFUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._FUpdateDate = value;
					this.SendPropertyChanged("FUpdateDate");
					this.OnFUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_FCreateBy", DbType="NVarChar(50)")]
		public string FCreateBy
		{
			get
			{
				return this._FCreateBy;
			}
			set
			{
				if ((this._FCreateBy != value))
				{
					this.OnFCreateByChanging(value);
					this.SendPropertyChanging();
					this._FCreateBy = value;
					this.SendPropertyChanged("FCreateBy");
					this.OnFCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_FUpdateBy", DbType="NVarChar(50)")]
		public string FUpdateBy
		{
			get
			{
				return this._FUpdateBy;
			}
			set
			{
				if ((this._FUpdateBy != value))
				{
					this.OnFUpdateByChanging(value);
					this.SendPropertyChanging();
					this._FUpdateBy = value;
					this.SendPropertyChanged("FUpdateBy");
					this.OnFUpdateByChanged();
				}
			}
		}
		
		[Column(Name="flgSecondWeight", Storage="_FlgSecondWeight", DbType="Bit")]
		public System.Nullable<bool> FlgSecondWeight
		{
			get
			{
				return this._FlgSecondWeight;
			}
			set
			{
				if ((this._FlgSecondWeight != value))
				{
					this.OnFlgSecondWeightChanging(value);
					this.SendPropertyChanging();
					this._FlgSecondWeight = value;
					this.SendPropertyChanged("FlgSecondWeight");
					this.OnFlgSecondWeightChanged();
				}
			}
		}
		
		[Column(Storage="_SDocDate", DbType="Date")]
		public System.Nullable<System.DateTime> SDocDate
		{
			get
			{
				return this._SDocDate;
			}
			set
			{
				if ((this._SDocDate != value))
				{
					this.OnSDocDateChanging(value);
					this.SendPropertyChanging();
					this._SDocDate = value;
					this.SendPropertyChanged("SDocDate");
					this.OnSDocDateChanged();
				}
			}
		}
		
		[Column(Storage="_SShift", DbType="Int")]
		public System.Nullable<int> SShift
		{
			get
			{
				return this._SShift;
			}
			set
			{
				if ((this._SShift != value))
				{
					this.OnSShiftChanging(value);
					this.SendPropertyChanging();
					this._SShift = value;
					this.SendPropertyChanged("SShift");
					this.OnSShiftChanged();
				}
			}
		}
		
		[Column(Storage="_STime", DbType="NVarChar(50)")]
		public string STime
		{
			get
			{
				return this._STime;
			}
			set
			{
				if ((this._STime != value))
				{
					this.OnSTimeChanging(value);
					this.SendPropertyChanging();
					this._STime = value;
					this.SendPropertyChanged("STime");
					this.OnSTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentDate", DbType="Date")]
		public System.Nullable<System.DateTime> SWeighmentDate
		{
			get
			{
				return this._SWeighmentDate;
			}
			set
			{
				if ((this._SWeighmentDate != value))
				{
					this.OnSWeighmentDateChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentDate = value;
					this.SendPropertyChanged("SWeighmentDate");
					this.OnSWeighmentDateChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentTime", DbType="NVarChar(50)")]
		public string SWeighmentTime
		{
			get
			{
				return this._SWeighmentTime;
			}
			set
			{
				if ((this._SWeighmentTime != value))
				{
					this.OnSWeighmentTimeChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentTime = value;
					this.SendPropertyChanged("SWeighmentTime");
					this.OnSWeighmentTimeChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SWeighmentKG
		{
			get
			{
				return this._SWeighmentKG;
			}
			set
			{
				if ((this._SWeighmentKG != value))
				{
					this.OnSWeighmentKGChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentKG = value;
					this.SendPropertyChanged("SWeighmentKG");
					this.OnSWeighmentKGChanged();
				}
			}
		}
		
		[Column(Storage="_SWeighmentTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> SWeighmentTon
		{
			get
			{
				return this._SWeighmentTon;
			}
			set
			{
				if ((this._SWeighmentTon != value))
				{
					this.OnSWeighmentTonChanging(value);
					this.SendPropertyChanging();
					this._SWeighmentTon = value;
					this.SendPropertyChanged("SWeighmentTon");
					this.OnSWeighmentTonChanged();
				}
			}
		}
		
		[Column(Storage="_NetWeightKG", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> NetWeightKG
		{
			get
			{
				return this._NetWeightKG;
			}
			set
			{
				if ((this._NetWeightKG != value))
				{
					this.OnNetWeightKGChanging(value);
					this.SendPropertyChanging();
					this._NetWeightKG = value;
					this.SendPropertyChanged("NetWeightKG");
					this.OnNetWeightKGChanged();
				}
			}
		}
		
		[Column(Storage="_NetWeightTon", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> NetWeightTon
		{
			get
			{
				return this._NetWeightTon;
			}
			set
			{
				if ((this._NetWeightTon != value))
				{
					this.OnNetWeightTonChanging(value);
					this.SendPropertyChanging();
					this._NetWeightTon = value;
					this.SendPropertyChanged("NetWeightTon");
					this.OnNetWeightTonChanged();
				}
			}
		}
		
		[Column(Storage="_ReturnQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ReturnQuantity
		{
			get
			{
				return this._ReturnQuantity;
			}
			set
			{
				if ((this._ReturnQuantity != value))
				{
					this.OnReturnQuantityChanging(value);
					this.SendPropertyChanging();
					this._ReturnQuantity = value;
					this.SendPropertyChanged("ReturnQuantity");
					this.OnReturnQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_SCreateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SCreateDate
		{
			get
			{
				return this._SCreateDate;
			}
			set
			{
				if ((this._SCreateDate != value))
				{
					this.OnSCreateDateChanging(value);
					this.SendPropertyChanging();
					this._SCreateDate = value;
					this.SendPropertyChanged("SCreateDate");
					this.OnSCreateDateChanged();
				}
			}
		}
		
		[Column(Storage="_SCreateBy", DbType="NVarChar(50)")]
		public string SCreateBy
		{
			get
			{
				return this._SCreateBy;
			}
			set
			{
				if ((this._SCreateBy != value))
				{
					this.OnSCreateByChanging(value);
					this.SendPropertyChanging();
					this._SCreateBy = value;
					this.SendPropertyChanged("SCreateBy");
					this.OnSCreateByChanged();
				}
			}
		}
		
		[Column(Storage="_SUpdateDate", DbType="DateTime")]
		public System.Nullable<System.DateTime> SUpdateDate
		{
			get
			{
				return this._SUpdateDate;
			}
			set
			{
				if ((this._SUpdateDate != value))
				{
					this.OnSUpdateDateChanging(value);
					this.SendPropertyChanging();
					this._SUpdateDate = value;
					this.SendPropertyChanged("SUpdateDate");
					this.OnSUpdateDateChanged();
				}
			}
		}
		
		[Column(Storage="_SUpdateBy", DbType="NVarChar(50)")]
		public string SUpdateBy
		{
			get
			{
				return this._SUpdateBy;
			}
			set
			{
				if ((this._SUpdateBy != value))
				{
					this.OnSUpdateByChanging(value);
					this.SendPropertyChanging();
					this._SUpdateBy = value;
					this.SendPropertyChanged("SUpdateBy");
					this.OnSUpdateByChanged();
				}
			}
		}
		
		[Column(Storage="_ItemGroupCode", DbType="NVarChar(50)")]
		public string ItemGroupCode
		{
			get
			{
				return this._ItemGroupCode;
			}
			set
			{
				if ((this._ItemGroupCode != value))
				{
					this.OnItemGroupCodeChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupCode = value;
					this.SendPropertyChanged("ItemGroupCode");
					this.OnItemGroupCodeChanged();
				}
			}
		}
		
		[Column(Storage="_ItemGroupName", DbType="NVarChar(50)")]
		public string ItemGroupName
		{
			get
			{
				return this._ItemGroupName;
			}
			set
			{
				if ((this._ItemGroupName != value))
				{
					this.OnItemGroupNameChanging(value);
					this.SendPropertyChanging();
					this._ItemGroupName = value;
					this.SendPropertyChanged("ItemGroupName");
					this.OnItemGroupNameChanged();
				}
			}
		}
		
		[Column(Storage="_RemainingQuantity", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> RemainingQuantity
		{
			get
			{
				return this._RemainingQuantity;
			}
			set
			{
				if ((this._RemainingQuantity != value))
				{
					this.OnRemainingQuantityChanging(value);
					this.SendPropertyChanging();
					this._RemainingQuantity = value;
					this.SendPropertyChanged("RemainingQuantity");
					this.OnRemainingQuantityChanged();
				}
			}
		}
		
		[Column(Storage="_YardId", DbType="Int")]
		public System.Nullable<int> YardId
		{
			get
			{
				return this._YardId;
			}
			set
			{
				if ((this._YardId != value))
				{
					this.OnYardIdChanging(value);
					this.SendPropertyChanging();
					this._YardId = value;
					this.SendPropertyChanged("YardId");
					this.OnYardIdChanged();
				}
			}
		}
		
		[Column(Name="flgPosted", Storage="_FlgPosted", DbType="Bit")]
		public System.Nullable<bool> FlgPosted
		{
			get
			{
				return this._FlgPosted;
			}
			set
			{
				if ((this._FlgPosted != value))
				{
					this.OnFlgPostedChanging(value);
					this.SendPropertyChanging();
					this._FlgPosted = value;
					this.SendPropertyChanged("FlgPosted");
					this.OnFlgPostedChanged();
				}
			}
		}
		
		[Column(Name="flg1Rpt", Storage="_Flg1Rpt", DbType="Bit")]
		public System.Nullable<bool> Flg1Rpt
		{
			get
			{
				return this._Flg1Rpt;
			}
			set
			{
				if ((this._Flg1Rpt != value))
				{
					this.OnFlg1RptChanging(value);
					this.SendPropertyChanging();
					this._Flg1Rpt = value;
					this.SendPropertyChanged("Flg1Rpt");
					this.OnFlg1RptChanged();
				}
			}
		}
		
		[Column(Name="flg2Rpt", Storage="_Flg2Rpt", DbType="Bit")]
		public System.Nullable<bool> Flg2Rpt
		{
			get
			{
				return this._Flg2Rpt;
			}
			set
			{
				if ((this._Flg2Rpt != value))
				{
					this.OnFlg2RptChanging(value);
					this.SendPropertyChanging();
					this._Flg2Rpt = value;
					this.SendPropertyChanged("Flg2Rpt");
					this.OnFlg2RptChanged();
				}
			}
		}
		
		[Column(Name="flgWBrpt", Storage="_FlgWBrpt", DbType="Bit")]
		public System.Nullable<bool> FlgWBrpt
		{
			get
			{
				return this._FlgWBrpt;
			}
			set
			{
				if ((this._FlgWBrpt != value))
				{
					this.OnFlgWBrptChanging(value);
					this.SendPropertyChanging();
					this._FlgWBrpt = value;
					this.SendPropertyChanged("FlgWBrpt");
					this.OnFlgWBrptChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	public partial class GetSumOpenValueSOResult
	{
		
		private System.Nullable<decimal> _ReturnValue;
		
		public GetSumOpenValueSOResult()
		{
		}
		
		[Column(Storage="_ReturnValue", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if ((this._ReturnValue != value))
				{
					this._ReturnValue = value;
				}
			}
		}
	}
	
	public partial class GetSumOpenValueSOValidationResult
	{
		
		private System.Nullable<decimal> _ReturnValue;
		
		public GetSumOpenValueSOValidationResult()
		{
		}
		
		[Column(Storage="_ReturnValue", DbType="Decimal(18,3)")]
		public System.Nullable<decimal> ReturnValue
		{
			get
			{
				return this._ReturnValue;
			}
			set
			{
				if ((this._ReturnValue != value))
				{
					this._ReturnValue = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
